{"version":3,"file":"static/js/243.bd7eab63.chunk.js","mappings":"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","sources":["components/general/BreadCrumbIcon.tsx","components/generic/details/EntityDetailWrapper.tsx","components/generic/details/ToEntity.tsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport { FaHome } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../../database/Store\";\nimport { SystemEntity } from \"../../database/SystemReducer\";\nimport { findIcon } from \"../../services/IconService\";\n\nconst BreadCrumbIcon = () => {\n  let location = useLocation();\n  const system = useSelector((state: RootState) => state.system);\n  const base = location.pathname.split(\"/\")[1];\n\n  const makeBreadCrumb = useCallback((): JSX.Element => {\n    let RibbonElm = <></>;\n    system.entities.forEach((entity: SystemEntity) => {\n      switch (true) {\n        case base === \"\":\n        case base === \"home\":\n          RibbonElm = (\n            <Ribbon>\n              <i>\n                <span>\n                  <FaHome />\n                </span>\n              </i>\n            </Ribbon>\n          );\n          break;\n        case base === `${entity.entityName}-detail`:\n        case base === `${entity.entityName}-builder`:\n          RibbonElm = (\n            <Ribbon>\n              <i>\n                <span>{findIcon(entity.icon)}</span>\n              </i>\n            </Ribbon>\n          );\n          break;\n        case base === `${entity.entityName}-overview`:\n          RibbonElm = (\n            <Ribbon>\n              <i>\n                <span>\n                  {findIcon(entity.icon, 10)}\n                  {findIcon(entity.icon, 20)}\n                  {findIcon(entity.icon, 10)}\n                </span>\n              </i>\n            </Ribbon>\n          );\n          break;\n      }\n    });\n    return RibbonElm;\n  }, [base, system]);\n\n  return makeBreadCrumb();\n};\n\nexport default BreadCrumbIcon;\n\nconst Ribbon = styled.div`\n  margin: 3em;\n  /* IE10 Consumer Preview */\n  background-image: -ms-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* Mozilla Firefox */\n  background-image: -moz-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* Opera */\n  background-image: -o-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* Webkit (Safari/Chrome 10) */\n  background-image: -webkit-gradient(\n    radial,\n    center top,\n    0,\n    center top,\n    487,\n    color-stop(0, #f55c5c),\n    color-stop(1, #c24a4a)\n  );\n  /* Webkit (Chrome 11+) */\n  background-image: -webkit-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* W3C Markup, IE10 Release Preview */\n  background-image: radial-gradient(\n    circle farthest-side at center top,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  width: 3.5em;\n  height: 3em;\n  position: relative;\n  top: -20px;\n  margin: 0px 10px 0px -10px;\n  border-top-right-radius: 0.2em;\n  border-top-left-radius: 0.2em;\n  font-family: \"Kite One\", sans-serif;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    bottom: -2.4em;\n    left: 0;\n    width: 0;\n    height: 0;\n    border-top: 2.5em solid #c24a4a;\n    border-right: 2.5em solid transparent;\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    bottom: -2.4em;\n    right: 0;\n    width: 0;\n    height: 0;\n    border-top: 2.5em solid #c24a4a;\n    border-left: 2.5em solid transparent;\n  }\n\n  & i {\n    width: 90%;\n    height: 160%;\n    display: block;\n    margin: auto;\n    z-index: 100;\n    position: relative;\n    border-right: dashed 0.0625em #333;\n    border-left: dashed 0.0625em #333;\n    overflow: hidden;\n  }\n\n  & i span {\n    color: #fff;\n    display: block;\n    text-align: center;\n    top: 50%;\n    margin-top: -1em;\n    position: relative;\n    text-shadow: 0.0625em 0.0625em 0.0625em #333;\n    font-style: normal;\n    font-weight: bold;\n  }\n`;\n","import { useState } from \"react\";\nimport { FaArrowLeft, FaClone, FaTrash } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, ButtonGroup, Notification, Modal, toaster } from \"rsuite\";\nimport styled from \"styled-components\";\nimport BreadCrumbIcon from \"../../general/BreadCrumbIcon\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport {\n  remove,\n  updateWithCallback,\n  createNewWithId,\n} from \"../../../services/DatabaseService\";\nimport EntityDetails from \"./EntityDetails\";\nimport { useSelector } from \"react-redux\";\nimport { selectDBName } from \"../../../database/SystemReducer\";\nimport { getEntityDetailConfig } from \"../../../services/SystemService\";\nimport { RootState } from \"../../../database/Store\";\n\ninterface $Props {\n  entity: IEntity;\n  entityName: string;\n}\n\nconst EntityDetailWrapper = ({ entity, entityName }: $Props) => {\n  let history = useNavigate();\n  const systemDbName = useSelector(selectDBName);\n  const system = useSelector((state: RootState) => state.system);\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const tableName = entityName;\n\n  const deleteEntity = () => {\n    remove(systemDbName, tableName, entityObj.id);\n    history(-1);\n    toaster.push(\n      <Notification closable header={\"Success\"} type=\"success\">\n        Success: Deleted {entityObj.name}.\n      </Notification>,\n      { placement: \"bottomStart\" }\n    );\n  };\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(systemDbName, tableName, entityObj, (result) => {\n      if (result > 0) {\n        toaster.push(\n          <Notification closable header={\"Success\"} type=\"success\">\n            Success: {msg}.\n          </Notification>,\n          { placement: \"bottomStart\" }\n        );\n      } else {\n        toaster.push(\n          <Notification closable header={\"Error\"} type=\"error\">\n            Error: Something went wrong!.\n          </Notification>,\n          { placement: \"bottomStart\" }\n        );\n      }\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(systemDbName, tableName, newObj, (id) => {\n      editAndSaveEntity(\n        { ...entity, name: entity.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  return (\n    <>\n      <Modal open={showDeleteDialog} onClose={() => setDeleteDialog(false)}>\n        <Modal.Header>\n          <Modal.Title>Attention</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete '{entity.name}'?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => deleteEntity()} appearance=\"primary\">\n            Yes, delete!\n          </Button>\n          <Button onClick={() => setDeleteDialog(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <TopBar>\n        <BreadCrumbIcon />\n        <ButtonGroup>\n          <Button onClick={() => history(-1)} size=\"lg\">\n            <FaArrowLeft />\n          </Button>\n          <Button onClick={() => duplicateEntity(entityObj)} size=\"lg\">\n            <FaClone />\n          </Button>\n          <Button onClick={() => setDeleteDialog(true)} size=\"lg\">\n            <FaTrash />\n          </Button>\n        </ButtonGroup>\n      </TopBar>\n      <EntityDetails\n        configs={Object.getOwnPropertyNames(\n          getEntityDetailConfig(system, entityName)\n        )}\n        entity={entityObj}\n        entityName={entityName}\n        isNew={false}\n        onEdit={(value: any) => editAndSaveEntity(value, \"Saved!\")}\n      />\n    </>\n  );\n};\n\nexport default EntityDetailWrapper;\n\nexport const TopBar = styled.div`\n  color: ${({ theme }) => theme.textColor};\n  font-size: 16px;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 55px;\n  padding: 10px;\n  display: flex;\n  align-items: flex-start;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Details from \"./EntityDetailWrapper\";\nimport {\n  recivePromise,\n  recivePromiseByAttribute,\n  recivePromiseByMultiAttribute,\n} from \"../../../services/DatabaseService\";\nimport { Loader } from \"rsuite\";\nimport IEntity from \"../../../data/IEntity\";\nimport { useSelector } from \"react-redux\";\nimport { selectDBName } from \"../../../database/SystemReducer\";\n\ninterface $EntityProps {\n  entityName: string;\n}\n\nconst ToEntity = ({ entityName }: $EntityProps) => {\n  const params = useParams();\n  const systemDbName = useSelector(selectDBName);\n  const [entity, setEntity] = useState<IEntity>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (entity !== undefined || error) {\n      setLoading(true);\n      setError(false);\n      setEntity(undefined);\n    }\n    // eslint-disable-next-line\n  }, [params]);\n\n  const makeEntity = useCallback(async () => {\n    let nameId: string | undefined = params.name;\n    let newEntity: IEntity | undefined = undefined;\n    var reg = /^\\d+$/;\n    if (nameId !== undefined) {\n      if (!reg.test(nameId)) {\n        let [name, sources] = nameId.split(\"|\");\n        if (sources !== undefined) {\n          newEntity = await recivePromiseByMultiAttribute(\n            systemDbName,\n            entityName,\n            {\n              name: name,\n              sources: sources,\n            }\n          );\n        } else {\n          newEntity = await recivePromiseByAttribute(\n            systemDbName,\n            entityName,\n            \"name\",\n            name\n          );\n        }\n      } else {\n        newEntity = await recivePromise(systemDbName, entityName, +nameId);\n      }\n    }\n    setLoading(false);\n    if (newEntity === undefined) {\n      setError(true);\n    } else {\n      setEntity(newEntity);\n    }\n  }, [params, entityName]);\n\n  useEffect(() => {\n    if (params !== undefined && entity === undefined) {\n      makeEntity();\n    }\n  }, [params, makeEntity, entity]);\n\n  return (\n    <>\n      {loading && <Loader center content=\"Loading...\" />}\n      {!loading && error && <>Error</>}\n      {!error && !loading && entity !== undefined && (\n        <Details entity={entity} entityName={entityName} />\n      )}\n    </>\n  );\n};\n\nexport default ToEntity;\n"],"names":["location","useLocation","system","useSelector","state","base","pathname","split","useCallback","RibbonElm","entities","forEach","entity","Ribbon","entityName","findIcon","icon","makeBreadCrumb","styled","history","useNavigate","systemDbName","selectDBName","useState","entityObj","editEntity","showDeleteDialog","setDeleteDialog","tableName","editAndSaveEntity","msg","updateWithCallback","result","toaster","closable","header","type","placement","updateEntity","open","onClose","name","onClick","remove","id","appearance","TopBar","size","obj","newObj","createNewWithId","duplicateEntity","configs","Object","getOwnPropertyNames","getEntityDetailConfig","isNew","onEdit","value","theme","textColor","params","useParams","setEntity","loading","setLoading","error","setError","useEffect","undefined","makeEntity","nameId","newEntity","reg","test","sources","recivePromiseByMultiAttribute","recivePromiseByAttribute","recivePromise","center","content"],"sourceRoot":""}