{"version":3,"sources":["components/pages/Group.tsx"],"names":["Group","useState","useEffect","styled","button","theme","highlight","textColor"],"mappings":"uJA+FeA,UAxFD,WACZ,MAA0CC,oBAAkB,GAA5D,mBACA,GADA,UAC0BA,mBAAiB,KAA3C,mBACA,GADA,UACsBA,mBAMpB,KANF,6BAQAC,qBAAU,cAqBP,IAMH,OACE,8BAmDiBC,IAAOC,OAAV,2YAOI,qBAAGC,MAAkBC,aAChC,qBAAGD,MAAkBE","file":"static/js/13.47270a31.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Avatar, Button, Divider, Input, Modal, SelectPicker } from \"rsuite\";\nimport Card, { Cards } from \"../general/Card\";\nimport { reciveAll } from \"../../services/DatabaseService\";\nimport styled from \"styled-components\";\nimport { FaUserPlus } from \"react-icons/fa\";\n\nconst Group = () => {\n  const [showAddPlayer, setShowAddPlayer] = useState<boolean>(false);\n  const [value, setValue] = useState<string>(\"\");\n  let [data, setData] = useState<\n    {\n      label: string;\n      value: string;\n      role: string;\n    }[]\n  >([]);\n\n  useEffect(() => {\n    // reciveAll(\"chars\", (results: any[]) => {\n    //   let newdata: {\n    //     label: string;\n    //     value: string;\n    //     role: string;\n    //   }[] = [];\n    //   newdata.push({\n    //     label: \"GM\",\n    //     value: \"GM\",\n    //     role: \"Main\",\n    //   });\n    //   results.forEach((result) => {\n    //     newdata.push({\n    //       label: result.name,\n    //       value: result.name,\n    //       role: \"Chars\",\n    //     });\n    //   });\n    //   setData(newdata);\n    // });\n  }, []);\n\n  const addPlayer = () => {\n    setShowAddPlayer(false);\n  };\n\n  return (\n    <>\n      {/* {peer !== undefined && (\n        <Cards>\n          <Card>\n            Your ID: <Input value={peer.isConnected} />\n            <Divider />\n            You are: <SelectPicker data={data} groupBy=\"role\" />\n          </Card>\n          {peer.listAllPeers((peerIds: string[]) => {\n            return peerIds.map((peerId: string) => {\n              return (\n                <Card>\n                  <Avatar\n                    circle\n                    src=\"https://avatars2.githubusercontent.com/u/12592949?s=460&v=4\"\n                  />\n                  <Divider />\n                  <Input value={peerId} />\n                </Card>\n              );\n            });\n          })}\n        </Cards>\n      )}\n\n      <CreateButton onClick={() => setShowAddPlayer(true)}>\n        <FaUserPlus />\n      </CreateButton>\n      <Modal backdrop={true} show={showAddPlayer} onHide={() => setShowAddPlayer(false)}>\n        <Modal.Header>\n          <Modal.Title>Add new Player</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Please add the peerId of the new player.\n          <Input value={value} onChange={setValue} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => addPlayer()} appearance=\"primary\">\n            Ok\n          </Button>\n          <Button onClick={() => setShowAddPlayer(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal> */}\n    </>\n  );\n};\n\nexport default Group;\n\nconst CreateButton = styled.button`\n  position: fixed;\n  bottom: 10px;\n  left: 10px;\n  top: auto;\n  z-index: 10;\n\n  background-color: ${({ theme }) => theme.highlight};\n  color: ${({ theme }) => theme.textColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  padding: 10px;\n  box-sizing: content-box;\n  line-height: 20px;\n  cursor: pointer;\n\n  width: 30px;\n  height: 30px;\n  border-radius: 40px;\n  text-decoration: none;\n`;\nfunction usePeerState(): [any, any, any, any, any] {\n  throw new Error(\"Function not implemented.\");\n}\n"],"sourceRoot":""}