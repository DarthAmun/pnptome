{"version":3,"sources":["services/SystemService.tsx","logo512.png","components/pages/Systems.tsx"],"names":["findEntitySearchField","system","entityName","attrName","index","entities","findIndex","entity","Object","searchConfig","getEntitySearchConfig","findEntityTileField","tileConfig","getEntityTileConfig","findEntityDetailField","detailConfig","getEntityDetailConfig","getEntityAttributes","attributes","formatSystemName","name","replaceAll","toLowerCase","trim","generateSystem","Dexie","delete","version","db","schema","forEach","entityIndex","attr","fieldIndex","length","JSON","parse","makeSchema","console","log","stores","open","Systems","history","useHistory","useState","systems","changeSystems","dispatch","useDispatch","stringify","DeafultSystem","newSystem","setNewSystem","newSystemDialog","showNewSystem","useEffect","reciveAllFromTable","entries","CardGroup","Panel","shaded","bordered","bodyFill","style","display","width","src","Logo","height","header","Button","onClick","e","map","pic","StyledPanel","setSystem","loadSystem","marginRight","push","pathname","id","editSystem","Input","as","rows","placeholder","value","onChange","val","newEntity","createNewWithId","toaster","Notification","type","placement","create","styled","div","theme","secondColor","textColor"],"mappings":"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","file":"static/js/11.6e39b9d1.chunk.js","sourcesContent":["import Dexie from \"dexie\";\nimport ConfigPart from \"../data/ConfigPart\";\nimport { System, SystemEntity } from \"../database/SystemReducer\";\n\nexport const findEntitySearchField = (\n  system: System,\n  entityName: string,\n  attrName: string\n): ConfigPart => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return Object(system.entities[index].searchConfig)[attrName];\n};\n\nexport const getEntitySearchConfig = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].searchConfig;\n};\n\nexport const findEntityTileField = (\n  system: System,\n  entityName: string,\n  attrName: string\n): ConfigPart => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return Object(system.entities[index].tileConfig)[attrName];\n};\n\nexport const getEntityTileConfig = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].tileConfig;\n};\n\nexport const findEntityDetailField = (\n  system: System,\n  entityName: string,\n  attrName: string\n): ConfigPart => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return Object(system.entities[index].detailConfig)[attrName];\n};\n\nexport const getEntityDetailConfig = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].detailConfig;\n};\n\nexport const getEntityAttributes = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].attributes;\n}\n\nconst formatSystemName = (name: string) => {\n  return name.replaceAll(\" \", \"\").toLowerCase().trim();\n};\n\nconst makeSchema = (system: System) => {\n  let schema: string = \"\";\n  system.entities.forEach((entity: SystemEntity, entityIndex: number) => {\n    schema += `\"${entity.entityName.toLowerCase()}\": \"`;\n    entity.attributes.forEach((attr: string, fieldIndex: number) => {\n      if (attr.toLowerCase() === \"id\") schema += \"++id\";\n      else schema += `${attr.toLowerCase()}`;\n      if (entity.attributes.length - 1 !== fieldIndex) schema += \",\";\n    });\n    schema += `\"`;\n    if (system.entities.length - 1 !== entityIndex) schema += \",\";\n  });\n  return JSON.parse(`{${schema}}`);\n};\n\nexport const generateSystem = (system: System) => {\n  Dexie.delete(`${formatSystemName(system.name)}-${system.version}`);\n  const db = new Dexie(`${formatSystemName(system.name)}-${system.version}`);\n  const schema = makeSchema(system);\n  console.log(`${formatSystemName(system.name)}-${system.version} generated.`);\n  db.version(1).stores(schema);\n  db.open();\n};\n","export default __webpack_public_path__ + \"static/media/logo512.87596d18.png\";","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Input, Panel, Notification, toaster } from \"rsuite\";\nimport styled from \"styled-components\";\nimport { setSystem, System } from \"../../database/SystemReducer\";\nimport {\n  createNewWithId,\n  reciveAllFromTable,\n} from \"../../services/DatabaseService\";\nimport DeafultSystem from \"../../System.json\";\nimport Logo from \"../../logo512.png\";\nimport { useDispatch } from \"react-redux\";\nimport { generateSystem } from \"../../services/SystemService\";\n\nfunction Systems() {\n  let history = useHistory();\n  const [systems, changeSystems] = useState<System[]>([]);\n  const dispatch = useDispatch();\n\n  const [newSystem, setNewSystem] = useState<string>(\n    JSON.stringify(DeafultSystem, null, 2)\n  );\n  const [newSystemDialog, showNewSystem] = useState<boolean>(false);\n\n  useEffect(() => {\n    reciveAllFromTable(\"PnPTomeDB\", \"systems\", (entries: any[]) => {\n      console.log(entries);\n      changeSystems(entries);\n    });\n  }, []);\n\n  const create = () => {\n    let newEntity = { ...JSON.parse(newSystem) };\n    delete newEntity.id;\n    showNewSystem(false);\n    createNewWithId(\"PnPTomeDB\", \"systems\", newEntity, (id: number) => {\n      generateSystem(newEntity);\n      toaster.push(\n        <Notification header={\"Success\"} type=\"success\">\n          Success: Created new system named {newEntity.name}.\n        </Notification>,\n        { placement: \"bottomStart\" }\n      );\n    });\n  };\n\n  const loadSystem = (system: System) => {\n    dispatch(setSystem(system));\n  };\n\n  const editSystem = (system: System) => {\n    history.push({\n      pathname: `/system-detail/${system.id}`,\n    });\n  };\n\n  return (\n    <>\n      {!newSystemDialog && (\n        <CardGroup>\n          <Panel\n            shaded\n            bordered\n            bodyFill\n            style={{ display: \"inline-block\", width: 240 }}\n          >\n            <img src={Logo} height=\"240\" />\n            <Panel header=\"Make a new System\">\n              <Button onClick={(e) => showNewSystem(true)}>New System</Button>\n            </Panel>\n          </Panel>\n          {systems.map((system: System, index: number) => {\n            return (\n              <Panel\n                key={index}\n                shaded\n                bordered\n                bodyFill\n                style={{ display: \"inline-block\", width: 240 }}\n              >\n                <img src={system.pic} height=\"240\" />\n                <StyledPanel header={system.name + \" - v\" + system.version}>\n                  <Button\n                    onClick={(e) => loadSystem(system)}\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Load\n                  </Button>\n                  <Button onClick={(e) => editSystem(system)}>\n                    View / Edit\n                  </Button>\n                </StyledPanel>\n              </Panel>\n            );\n          })}\n        </CardGroup>\n      )}\n      {newSystemDialog && (\n        <>\n          <Input\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"Textarea\"\n            value={newSystem}\n            onChange={(val: any) => setNewSystem(val)}\n          />\n          <Button onClick={(e) => create()} style={{ marginRight: \"10px\" }}>\n            Save\n          </Button>\n          <Button onClick={(e) => showNewSystem(false)}>Back</Button>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Systems;\n\nconst CardGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst StyledPanel = styled(Panel)`\n  background-color: ${({ theme }) => theme.secondColor};\n  color: ${({ theme }) => theme.textColor};\n`;\n"],"sourceRoot":""}