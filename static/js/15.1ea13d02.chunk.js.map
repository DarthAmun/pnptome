{"version":3,"sources":["logo512.png","components/pages/Systems.tsx"],"names":["Systems","history","useHistory","useState","systems","changeSystems","dispatch","useDispatch","JSON","stringify","DeafultSystem","newSystem","setNewSystem","newSystemDialog","showNewSystem","useEffect","reciveAllFromTable","entries","console","log","CardGroup","Panel","shaded","bordered","bodyFill","style","display","width","src","Logo","height","header","Button","onClick","e","map","system","index","pic","StyledPanel","name","version","localStorage","setItem","setSystem","loadSystem","marginRight","push","pathname","id","editSystem","Input","as","rows","placeholder","value","onChange","val","newEntity","parse","createNewWithId","generateSystem","toaster","Notification","type","placement","create","styled","div","theme","secondColor","textColor"],"mappings":"qOAAe,MAA0B,oC,uBCqH1BA,UAvGf,WACE,IAAIC,EAAUC,cACd,EAAiCC,mBAAmB,IAApD,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAEjB,EAAkCJ,mBAChCK,KAAKC,UAAUC,EAAe,KAAM,IADtC,mBAAOC,EAAP,KAAkBC,EAAlB,KAGA,EAAyCT,oBAAkB,GAA3D,mBAAOU,EAAP,KAAwBC,EAAxB,KAmCA,OAjCAC,qBAAU,WACRC,YAAmB,YAAa,WAAW,SAACC,GAC1CC,QAAQC,IAAIF,GACZZ,EAAcY,QAEf,IA6BD,sCACIJ,GACA,eAACO,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,QAAM,EACNC,UAAQ,EACRC,UAAQ,EACRC,MAAO,CAAEC,QAAS,eAAgBC,MAAO,KAJ3C,UAME,qBAAKC,IAAKC,EAAMC,OAAO,QACvB,cAACT,EAAA,EAAD,CAAOU,OAAO,oBAAd,SACE,cAACC,EAAA,EAAD,CAAQC,QAAS,SAACC,GAAD,OAAOpB,GAAc,IAAtC,6BAGHV,EAAQ+B,KAAI,SAACC,EAAgBC,GAC5B,OACE,eAAChB,EAAA,EAAD,CAEEC,QAAM,EACNC,UAAQ,EACRC,UAAQ,EACRC,MAAO,CAAEC,QAAS,eAAgBC,MAAO,KAL3C,UAOE,qBAAKC,IAAKQ,EAAOE,IAAKR,OAAO,QAC7B,eAACS,EAAD,CAAaR,OAAQK,EAAOI,KAAO,OAASJ,EAAOK,QAAnD,UACE,cAACT,EAAA,EAAD,CACEC,QAAS,SAACC,GAAD,OAtCR,SAACE,GAClBM,aAAaC,QAAQ,SAAUnC,KAAKC,UAAU2B,IAC9C9B,EAASsC,YAAUR,IAoCaS,CAAWT,IAC3BX,MAAO,CAAEqB,YAAa,QAFxB,kBAMA,cAACd,EAAA,EAAD,CAAQC,QAAS,SAACC,GAAD,OAtCd,SAACE,GAClBnC,EAAQ8C,KAAK,CACXC,SAAS,kBAAD,OAAoBZ,EAAOa,MAoCCC,CAAWd,IAAnC,8BAdGC,SAuBdxB,GACC,qCACE,cAACsC,EAAA,EAAD,CACEC,GAAG,WACHC,KAAM,EACNC,YAAY,WACZC,MAAO5C,EACP6C,SAAU,SAACC,GAAD,OAAc7C,EAAa6C,MAEvC,cAACzB,EAAA,EAAD,CAAQC,QAAS,SAACC,GAAD,OA5EV,WACb,IAAIwB,EAAS,eAAQlD,KAAKmD,MAAMhD,WACzB+C,EAAUT,GACjBnC,GAAc,GACd8C,YAAgB,YAAa,UAAWF,GAAW,SAACT,GAClDY,YAAeH,GACfI,IAAQf,KACN,eAACgB,EAAA,EAAD,CAAchC,OAAQ,UAAWiC,KAAK,UAAtC,+CACqCN,EAAUlB,KAD/C,OAGA,CAAEyB,UAAW,mBAkEaC,IAAUzC,MAAO,CAAEqB,YAAa,QAAxD,kBAGA,cAACd,EAAA,EAAD,CAAQC,QAAS,SAACC,GAAD,OAAOpB,GAAc,IAAtC,yBAOKd,IAEToB,EAAY+C,IAAOC,IAAV,gFAMT7B,EAAc4B,YAAO9C,IAAP8C,CAAH,qEACK,qBAAGE,MAAkBC,eAChC,qBAAGD,MAAkBE","file":"static/js/15.1ea13d02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo512.87596d18.png\";","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Input, Panel, Notification, toaster } from \"rsuite\";\nimport styled from \"styled-components\";\nimport { setSystem, System } from \"../../database/SystemReducer\";\nimport {\n  createNewWithId,\n  reciveAllFromTable,\n} from \"../../services/DatabaseService\";\nimport DeafultSystem from \"../../System.json\";\nimport Logo from \"../../logo512.png\";\nimport { useDispatch } from \"react-redux\";\nimport { generateSystem } from \"../../services/SystemService\";\n\nfunction Systems() {\n  let history = useHistory();\n  const [systems, changeSystems] = useState<System[]>([]);\n  const dispatch = useDispatch();\n\n  const [newSystem, setNewSystem] = useState<string>(\n    JSON.stringify(DeafultSystem, null, 2)\n  );\n  const [newSystemDialog, showNewSystem] = useState<boolean>(false);\n\n  useEffect(() => {\n    reciveAllFromTable(\"PnPTomeDB\", \"systems\", (entries: any[]) => {\n      console.log(entries);\n      changeSystems(entries);\n    });\n  }, []);\n\n  const create = () => {\n    let newEntity = { ...JSON.parse(newSystem) };\n    delete newEntity.id;\n    showNewSystem(false);\n    createNewWithId(\"PnPTomeDB\", \"systems\", newEntity, (id: number) => {\n      generateSystem(newEntity);\n      toaster.push(\n        <Notification header={\"Success\"} type=\"success\">\n          Success: Created new system named {newEntity.name}.\n        </Notification>,\n        { placement: \"bottomStart\" }\n      );\n    });\n  };\n\n  const loadSystem = (system: System) => {\n    localStorage.setItem('system', JSON.stringify(system));\n    dispatch(setSystem(system));\n  };\n\n  const editSystem = (system: System) => {\n    history.push({\n      pathname: `/system-detail/${system.id}`,\n    });\n  };\n\n  return (\n    <>\n      {!newSystemDialog && (\n        <CardGroup>\n          <Panel\n            shaded\n            bordered\n            bodyFill\n            style={{ display: \"inline-block\", width: 240 }}\n          >\n            <img src={Logo} height=\"240\" />\n            <Panel header=\"Make a new System\">\n              <Button onClick={(e) => showNewSystem(true)}>New System</Button>\n            </Panel>\n          </Panel>\n          {systems.map((system: System, index: number) => {\n            return (\n              <Panel\n                key={index}\n                shaded\n                bordered\n                bodyFill\n                style={{ display: \"inline-block\", width: 240 }}\n              >\n                <img src={system.pic} height=\"240\" />\n                <StyledPanel header={system.name + \" - v\" + system.version}>\n                  <Button\n                    onClick={(e) => loadSystem(system)}\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Load\n                  </Button>\n                  <Button onClick={(e) => editSystem(system)}>\n                    View / Edit\n                  </Button>\n                </StyledPanel>\n              </Panel>\n            );\n          })}\n        </CardGroup>\n      )}\n      {newSystemDialog && (\n        <>\n          <Input\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"Textarea\"\n            value={newSystem}\n            onChange={(val: any) => setNewSystem(val)}\n          />\n          <Button onClick={(e) => create()} style={{ marginRight: \"10px\" }}>\n            Save\n          </Button>\n          <Button onClick={(e) => showNewSystem(false)}>Back</Button>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Systems;\n\nconst CardGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst StyledPanel = styled(Panel)`\n  background-color: ${({ theme }) => theme.secondColor};\n  color: ${({ theme }) => theme.textColor};\n`;\n"],"sourceRoot":""}