{"version":3,"file":"static/js/21.ab7c7ac4.chunk.js","mappings":"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","sources":["components/general/BreadCrumbIcon.tsx","components/generic/EntitySearch.tsx","components/generic/EntityOverview.tsx","components/generic/details/EntityDetailWrapper.tsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport { FaHome } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../../database/Store\";\nimport { SystemEntity } from \"../../database/SystemReducer\";\nimport { findIcon } from \"../../services/IconService\";\n\nconst BreadCrumbIcon = () => {\n  let location = useLocation();\n  const system = useSelector((state: RootState) => state.system);\n  const base = location.pathname.split(\"/\")[1];\n\n  const makeBreadCrumb = useCallback((): JSX.Element => {\n    let RibbonElm = <></>;\n    system.entities.forEach((entity: SystemEntity) => {\n      switch (true) {\n        case base === \"\":\n        case base === \"home\":\n          RibbonElm = (\n            <Ribbon>\n              <i>\n                <span>\n                  <FaHome />\n                </span>\n              </i>\n            </Ribbon>\n          );\n          break;\n        case base === `${entity.entityName}-detail`:\n        case base === `${entity.entityName}-builder`:\n          RibbonElm = (\n            <Ribbon>\n              <i>\n                <span>{findIcon(entity.icon)}</span>\n              </i>\n            </Ribbon>\n          );\n          break;\n        case base === `${entity.entityName}-overview`:\n          RibbonElm = (\n            <Ribbon>\n              <i>\n                <span>\n                  {findIcon(entity.icon, 10)}\n                  {findIcon(entity.icon, 20)}\n                  {findIcon(entity.icon, 10)}\n                </span>\n              </i>\n            </Ribbon>\n          );\n          break;\n      }\n    });\n    return RibbonElm;\n  }, [base, system]);\n\n  return makeBreadCrumb();\n};\n\nexport default BreadCrumbIcon;\n\nconst Ribbon = styled.div`\n  margin: 3em;\n  /* IE10 Consumer Preview */\n  background-image: -ms-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* Mozilla Firefox */\n  background-image: -moz-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* Opera */\n  background-image: -o-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* Webkit (Safari/Chrome 10) */\n  background-image: -webkit-gradient(\n    radial,\n    center top,\n    0,\n    center top,\n    487,\n    color-stop(0, #f55c5c),\n    color-stop(1, #c24a4a)\n  );\n  /* Webkit (Chrome 11+) */\n  background-image: -webkit-radial-gradient(\n    center top,\n    circle farthest-side,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  /* W3C Markup, IE10 Release Preview */\n  background-image: radial-gradient(\n    circle farthest-side at center top,\n    #f55c5c 0%,\n    #c24a4a 100%\n  );\n  width: 3.5em;\n  height: 3em;\n  position: relative;\n  top: -20px;\n  margin: 0px 10px 0px -10px;\n  border-top-right-radius: 0.2em;\n  border-top-left-radius: 0.2em;\n  font-family: \"Kite One\", sans-serif;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    bottom: -2.4em;\n    left: 0;\n    width: 0;\n    height: 0;\n    border-top: 2.5em solid #c24a4a;\n    border-right: 2.5em solid transparent;\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    bottom: -2.4em;\n    right: 0;\n    width: 0;\n    height: 0;\n    border-top: 2.5em solid #c24a4a;\n    border-left: 2.5em solid transparent;\n  }\n\n  & i {\n    width: 90%;\n    height: 160%;\n    display: block;\n    margin: auto;\n    z-index: 100;\n    position: relative;\n    border-right: dashed 0.0625em #333;\n    border-left: dashed 0.0625em #333;\n    overflow: hidden;\n  }\n\n  & i span {\n    color: #fff;\n    display: block;\n    text-align: center;\n    top: 50%;\n    margin-top: -1em;\n    position: relative;\n    text-shadow: 0.0625em 0.0625em 0.0625em #333;\n    font-style: normal;\n    font-weight: bold;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Filter from \"../../data/Filter\";\nimport { Drawer, Button } from \"rsuite\";\nimport { getPathVariable } from \"../../services/LocationPathService\";\nimport { getEntitySearchConfig } from \"../../services/SystemService\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../database/Store\";\nimport EntitySearchModules from \"./EntitySearchModules\";\n\ninterface $SearchProps {\n  entityName: string;\n  entities: any[];\n  filters: Filter[];\n  showSearchBar: boolean;\n  openSearchBar: (value: boolean) => void;\n  doSearch: (filters: Filter[], isNewSearch: boolean) => void;\n}\n\nconst EntitySearch = ({\n  entityName,\n  entities,\n  filters: mainFilters,\n  showSearchBar,\n  openSearchBar,\n  doSearch,\n}: $SearchProps) => {\n  let history = useNavigate();\n  let location = useLocation();\n  const [oldFilters, setOldFilters] = useState<Filter[]>(mainFilters);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  const system = useSelector((state: RootState) => state.system);\n\n  const applyFilterChange = (filter: Filter, type: any) => {\n    setFilters((newFilters: Filter[]) => {\n      if (newFilters.filter((f) => f.fieldName === type).length === 1)\n        newFilters = newFilters.map((f) => (f.fieldName === type ? filter : f));\n      else newFilters = [...newFilters, filter];\n      return newFilters;\n    });\n  };\n\n  const removeFilterChange = (type: any) => {\n    setFilters((newFilters: Filter[]) => {\n      return newFilters.filter((f) => f.fieldName !== type);\n    });\n  };\n\n  useEffect(() => {\n    if (JSON.stringify(oldFilters) != JSON.stringify(mainFilters))\n      doSearch(oldFilters, false);\n  }, [oldFilters]);\n\n  useEffect(() => {\n    let filters: string = getPathVariable(location, \"filter\");\n    const oldFilterString: string = unescape(filters);\n    if (oldFilterString !== \"\") {\n      const newOldFilters: Filter[] = JSON.parse(oldFilterString);\n      setOldFilters(newOldFilters);\n    }\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [...filters];\n    if (newFilters.length > 0) {\n      if (location.search !== \"\") {\n        let step: string = \"\";\n        const locationParts: string[] = location.search.substring(1).split(\"&\");\n        locationParts.forEach((part: string) => {\n          if (part.includes(\"step\")) step = part;\n        });\n        history({\n          pathname: `/${entityName}-overview`,\n          search: `?filter=${JSON.stringify(newFilters)}&${\n            step !== \"\" ? `${step}&` : \"\"\n          }page=1`,\n        });\n      } else {\n        history({\n          pathname: `/${entityName}-overview`,\n          search: `?filter=${JSON.stringify(newFilters)}`,\n        });\n      }\n    } else {\n      history({\n        pathname: `/${entityName}-overview`,\n      });\n    }\n    doSearch(newFilters, true);\n  };\n\n  const reset = () => {\n    setFilters([]);\n    setOldFilters([]);\n    let step: string = \"\";\n    const locationParts: string[] = location.search.substring(1).split(\"&\");\n    locationParts.forEach((part: string) => {\n      if (part.includes(\"step\")) step = part;\n    });\n    history({\n      pathname: `/${entityName}-overview`,\n      search: `?${step !== \"\" ? `${step}&` : \"\"}page=1`,\n    });\n  };\n\n  return (\n    <Drawer\n      open={showSearchBar}\n      onClose={() => openSearchBar(false)}\n      placement={\"top\"}\n    >\n      <Drawer.Header>\n        <Drawer.Title>Search</Drawer.Title>\n        <Drawer.Actions>\n          <Button\n            onClick={() => {\n              search();\n              openSearchBar(false);\n            }}\n            appearance=\"primary\"\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => {\n              reset();\n              openSearchBar(false);\n            }}\n            appearance=\"ghost\"\n          >\n            Reset\n          </Button>\n        </Drawer.Actions>\n      </Drawer.Header>\n      <Drawer.Body>\n        <EntitySearchModules\n          configs={Object.getOwnPropertyNames(\n            getEntitySearchConfig(system, entityName)\n          )}\n          entityName={entityName}\n          entities={entities}\n          applyFilterChange={applyFilterChange}\n          removeFilterChange={removeFilterChange}\n        />\n      </Drawer.Body>\n    </Drawer>\n  );\n};\n\nexport default EntitySearch;\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  ButtonGroup,\n  InputNumber,\n  Loader,\n  Pagination,\n  Tag,\n  TagGroup,\n} from \"rsuite\";\nimport { reciveAll, reciveAllFiltered } from \"../../services/DatabaseService\";\nimport { FaPlusCircle, FaSearch } from \"react-icons/fa\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { getPathVariable } from \"../../services/LocationPathService\";\nimport { TopBar } from \"./details/EntityDetailWrapper\";\nimport EntitySearch from \"./EntitySearch\";\nimport Filter from \"../../data/Filter\";\nimport BreadCrumbIcon from \"../general/BreadCrumbIcon\";\nimport EntityTile from \"./EntityTile\";\nimport IEntity from \"../../data/IEntity\";\nimport { useSelector } from \"react-redux\";\nimport { selectDBName } from \"../../database/SystemReducer\";\nimport { getEntityTileConfig } from \"../../services/SystemService\";\nimport { RootState } from \"../../database/Store\";\n\ninterface $OverviewProps {\n  entityName: string;\n}\n\nconst EntityOverview = ({ entityName }: $OverviewProps) => {\n  let history = useNavigate();\n  let location = useLocation();\n  const systemDbName = useSelector(selectDBName);\n  const system = useSelector((state: RootState) => state.system);\n  const [allEntitysFromType, setAllEntitys] = useState<IEntity[]>([]);\n  const [entities, setEntities] = useState<IEntity[]>([]);\n  const [pageEntities, setPageEntities] = useState<IEntity[]>([]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  const [activePage, setActivePage] = useState<number>(1);\n  const [pageAmount, setPageAmount] = useState<number>(1);\n  const [step, setStep] = useState<number>(10);\n\n  const [showSearchBar, openSearchBar] = useState<boolean>(false);\n  const [loading, isLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (entityName !== \"\")\n      reciveAll(systemDbName, entityName, (results: any[]) => {\n        setAllEntitys(results);\n      });\n  }, [entityName]);\n\n  const loadPage = () => {\n    const { oldPage, oldStep, oldFilters } = load();\n    const newEntitiesShown = entities.slice(\n      (oldPage - 1) * oldStep,\n      oldPage * oldStep\n    );\n    setActivePage(oldPage);\n    setStep(oldStep);\n    setPageAmount(Math.ceil(entities.length / oldStep));\n    setPageEntities(newEntitiesShown);\n    setFilters(oldFilters);\n  };\n  const loadPageWithResults = (newEntities: any[]) => {\n    const { oldPage, oldStep } = load();\n    const pageAmount = Math.ceil(newEntities.length / oldStep);\n\n    let newPage = 1;\n    let newStep = 10;\n    if (pageAmount > oldPage) {\n      newPage = oldPage;\n      newStep = oldStep;\n    }\n    const newEntitiesShown = newEntities.slice(\n      (newPage - 1) * newStep,\n      newPage * newStep\n    );\n    setActivePage(newPage);\n    setStep(newStep);\n    setPageAmount(pageAmount);\n    setPageEntities(newEntitiesShown);\n  };\n  const loadPageWithResultsOld = (\n    newStep: number,\n    newPage: number,\n    newEntities: any[]\n  ) => {\n    const newEntitiesShown = newEntities.slice(\n      (newPage - 1) * newStep,\n      newPage * newStep\n    );\n    setActivePage(newPage);\n    setStep(newStep);\n    setPageAmount(Math.ceil(newEntities.length / newStep));\n    setPageEntities(newEntitiesShown);\n  };\n\n  const load = (): { oldStep: number; oldPage: number; oldFilters: any[] } => {\n    let oldStep: number = +getPathVariable(location, \"step\");\n    let oldPage: number = +getPathVariable(location, \"page\");\n    let oldFilters: string = getPathVariable(location, \"filter\");\n\n    if (oldPage < 1) oldPage = 1;\n    if (oldStep < 10) oldStep = 10;\n\n    if (oldFilters !== \"\") {\n      const newFilter: any[] = JSON.parse(oldFilters);\n      return { oldStep: oldStep, oldPage: oldPage, oldFilters: newFilter };\n    } else {\n      return { oldStep: oldStep, oldPage: oldPage, oldFilters: [] };\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"reload\");\n    loadPage();\n  }, [location]);\n\n  useEffect(() => {\n    const { oldFilters } = load();\n    search(oldFilters, false);\n  }, [location.pathname]);\n\n  const search = (filters: Filter[], isNewSearch: boolean) => {\n    console.log(\"search\", isNewSearch);\n    isLoading(true);\n    reciveAllFiltered(systemDbName, entityName, filters, (results: any[]) => {\n      if (results.length <= 0) {\n        openSearchBar(true);\n      }\n      setEntities(results);\n      setFilters(filters);\n      if (isNewSearch) loadPageWithResultsOld(10, 1, results);\n      else loadPageWithResults(results);\n      isLoading(false);\n    });\n  };\n\n  const changePage = (page: number) => {\n    const newEntities = entities.slice((page - 1) * step, page * step);\n    setPageEntities(newEntities);\n    setActivePage(page);\n    if (location.search.includes(\"filter\")) {\n      let filters: string = \"\";\n      let locationParts: string[] = location.search.substring(1).split(\"&\");\n      locationParts.forEach((part: string) => {\n        if (part.includes(\"filter\")) filters = part;\n      });\n      history({\n        pathname: `/${entityName}-overview`,\n        search: `?${filters}&page=${page}&step=${step}`,\n      });\n    } else {\n      history({\n        pathname: `/${entityName}-overview`,\n        search: `?page=${page}&step=${step}`,\n      });\n    }\n  };\n\n  const changeStep = (step: number) => {\n    const newEntities = entities.slice((1 - 1) * step, 1 * step);\n    setPageEntities(newEntities);\n    setStep(step);\n    if (location.search.includes(\"filter\")) {\n      let filters: string = \"\";\n      let locationParts: string[] = location.search.substring(1).split(\"&\");\n      locationParts.forEach((part: string) => {\n        if (part.includes(\"filter\")) filters = part;\n      });\n      history({\n        pathname: `/${entityName}-overview`,\n        search: `?${filters}&page=1&step=${step}`,\n      });\n    } else {\n      history({\n        pathname: `/${entityName}-overview`,\n        search: `?page=1&step=${step}`,\n      });\n    }\n  };\n\n  const makeNew = () => {\n    history(`/${entityName}-builder`);\n  };\n\n  const makeFilterTag = (filter: Filter, index: number) => {\n    if (filter.value instanceof Array) {\n      let length = filter.value.length;\n      return (\n        <Tag size=\"lg\" key={index}>\n          {filter.fieldName}:{\" \"}\n          {filter.value.map((val: any, index: number) =>\n            index + 1 === length ? val : val + \" or \"\n          )}\n        </Tag>\n      );\n    } else if (typeof filter.value === \"boolean\") {\n      return (\n        <Tag size=\"lg\" key={index}>\n          {filter.fieldName}: {filter.value ? \"true\" : \"false\"}\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag size=\"lg\" key={index}>\n          {filter.fieldName}: \"{filter.value}\"\n        </Tag>\n      );\n    }\n  };\n\n  return (\n    <>\n      <EntitySearch\n        entityName={entityName}\n        entities={allEntitysFromType}\n        filters={filters}\n        showSearchBar={showSearchBar}\n        openSearchBar={openSearchBar}\n        doSearch={search}\n      />\n\n      <EntityOptions>\n        <BreadCrumbIcon />\n        <ButtonGroup>\n          <Button onClick={() => makeNew()} size=\"lg\">\n            <FaPlusCircle />\n          </Button>\n          <Button\n            onClick={() => openSearchBar((o) => !o)}\n            style={{ marginRight: \"5px\" }}\n            size=\"lg\"\n          >\n            <FaSearch />\n          </Button>\n        </ButtonGroup>\n        <InputNumber\n          size=\"lg\"\n          prefix=\"Step\"\n          value={step}\n          onChange={(value: any) => changeStep(value)}\n          step={10}\n          max={100}\n          min={10}\n          scrollable={true}\n          style={{ width: 130 }}\n        />\n        <TagGroup style={{ marginLeft: \"5px\", marginTop: \"-5px\" }}>\n          {filters.map((filter: Filter, index: number) =>\n            makeFilterTag(filter, index)\n          )}\n        </TagGroup>\n      </EntityOptions>\n\n      {loading && <Loader center content=\"Loading...\" />}\n      {!loading && entities.length > 0 && (\n        <>\n          <PaginationWrapper>\n            <Pagination\n              size=\"lg\"\n              prev={true}\n              next={true}\n              first={true}\n              last={true}\n              ellipsis={true}\n              boundaryLinks={true}\n              pages={pageAmount}\n              maxButtons={5}\n              activePage={activePage}\n              onChangePage={changePage}\n              total={0}\n            />\n          </PaginationWrapper>\n\n          <EntityContainer>\n            {entityName !== \"\" &&\n              pageEntities.length > 0 &&\n              pageEntities!.map((entity: IEntity, index: number) => {\n                return (\n                  <EntityTile\n                    configs={Object.getOwnPropertyNames(\n                      getEntityTileConfig(system, entityName)\n                    )}\n                    key={index}\n                    entity={entity}\n                    entityName={entityName}\n                  />\n                );\n              })}\n          </EntityContainer>\n\n          <PaginationWrapper>\n            <Pagination\n              size=\"lg\"\n              prev={true}\n              next={true}\n              first={true}\n              last={true}\n              ellipsis={true}\n              boundaryLinks={true}\n              pages={pageAmount}\n              maxButtons={5}\n              activePage={activePage}\n              onChangePage={changePage}\n              total={0}\n            />\n          </PaginationWrapper>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EntityOverview;\n\nconst EntityContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nconst PaginationWrapper = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  justify-content: center;\n  padding: 5px;\n`;\n\nconst EntityOptions = styled(TopBar)`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useState } from \"react\";\nimport { FaArrowLeft, FaClone, FaTrash } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, ButtonGroup, Notification, Modal, toaster } from \"rsuite\";\nimport styled from \"styled-components\";\nimport BreadCrumbIcon from \"../../general/BreadCrumbIcon\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport {\n  remove,\n  updateWithCallback,\n  createNewWithId,\n} from \"../../../services/DatabaseService\";\nimport EntityDetails from \"./EntityDetails\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDBName } from \"../../../database/SystemReducer\";\nimport { getEntityDetailConfig } from \"../../../services/SystemService\";\nimport { RootState } from \"../../../database/Store\";\nimport { MdScreenShare } from \"react-icons/md\";\nimport Peer, { DataConnection } from \"peerjs\";\nimport { postEvent } from \"../../../services/ChatService\";\nimport { Group } from \"../../../database/GroupReducer\";\nimport {\n  addEvent,\n  EventDto,\n  EventType,\n} from \"../../../database/chatLogReducer\";\n\ninterface $Props {\n  entity: IEntity;\n  entityName: string;\n}\n\nconst EntityDetailWrapper = ({ entity, entityName }: $Props) => {\n  let history = useNavigate();\n  const dispatch = useDispatch();\n  const systemDbName = useSelector(selectDBName);\n  const liveGroup: Group = useSelector((state: RootState) => state.group);\n  const peer: Peer | undefined = useSelector(\n    (state: RootState) => state.peerContext.peer\n  );\n  const conns: DataConnection[] = useSelector(\n    (state: RootState) => state.peerContext.connections\n  );\n  const system = useSelector((state: RootState) => state.system);\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const tableName = entityName;\n\n  const deleteEntity = () => {\n    remove(systemDbName, tableName, entityObj.id);\n    history(-1);\n    toaster.push(\n      <Notification closable header={\"Success\"} type=\"success\">\n        Success: Deleted {entityObj.name}.\n      </Notification>,\n      { placement: \"bottomStart\" }\n    );\n  };\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(systemDbName, tableName, entityObj, (result) => {\n      if (result > 0) {\n        toaster.push(\n          <Notification closable header={\"Success\"} type=\"success\">\n            Success: {msg}.\n          </Notification>,\n          { placement: \"bottomStart\" }\n        );\n      } else {\n        toaster.push(\n          <Notification closable header={\"Error\"} type=\"error\">\n            Error: Something went wrong!.\n          </Notification>,\n          { placement: \"bottomStart\" }\n        );\n      }\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(systemDbName, tableName, newObj, (id) => {\n      editAndSaveEntity(\n        { ...entity, name: entity.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  const shareEntity = () => {\n    const uuid: string | null = localStorage.getItem(\"playerID\");\n    const ruuid: string = uuid !== null ? uuid : \"\";\n    console.log(ruuid, entityObj);\n    const newEvent: EventDto = {\n      uuid: ruuid,\n      payload: {\n        entityName: entityName,\n        entity: entityObj,\n      },\n      type: EventType.Entity,\n    };\n    dispatch(addEvent(newEvent));\n    postEvent(newEvent, peer, conns);\n  };\n\n  return (\n    <>\n      <Modal open={showDeleteDialog} onClose={() => setDeleteDialog(false)}>\n        <Modal.Header>\n          <Modal.Title>Attention</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete '{entity.name}'?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => deleteEntity()} appearance=\"primary\">\n            Yes, delete!\n          </Button>\n          <Button onClick={() => setDeleteDialog(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <TopBar>\n        <BreadCrumbIcon />\n        <ButtonGroup>\n          <Button onClick={() => history(-1)} size=\"lg\">\n            <FaArrowLeft />\n          </Button>\n          <Button onClick={() => duplicateEntity(entityObj)} size=\"lg\">\n            <FaClone />\n          </Button>\n          <Button onClick={() => setDeleteDialog(true)} size=\"lg\">\n            <FaTrash />\n          </Button>\n        </ButtonGroup>\n        {liveGroup && liveGroup.id !== -1 && (\n          <Button onClick={() => shareEntity()} size=\"lg\">\n            <MdScreenShare />\n          </Button>\n        )}\n      </TopBar>\n      <EntityDetails\n        configs={Object.getOwnPropertyNames(\n          getEntityDetailConfig(system, entityName)\n        )}\n        entity={entityObj}\n        entityName={entityName}\n        isNew={false}\n        onEdit={(value: any) => editAndSaveEntity(value, \"Saved!\")}\n      />\n    </>\n  );\n};\n\nexport default EntityDetailWrapper;\n\nexport const TopBar = styled.div`\n  color: ${({ theme }) => theme.textColor};\n  font-size: 16px;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 55px;\n  padding: 10px;\n  display: flex;\n  align-items: flex-start;\n  gap: 5px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n"],"names":["location","useLocation","system","useSelector","state","base","pathname","split","useCallback","RibbonElm","entities","forEach","entity","Ribbon","entityName","findIcon","icon","makeBreadCrumb","styled","mainFilters","filters","showSearchBar","openSearchBar","doSearch","history","useNavigate","useState","oldFilters","setOldFilters","setFilters","useEffect","JSON","stringify","getPathVariable","oldFilterString","unescape","newOldFilters","parse","Drawer","open","onClose","placement","Button","onClick","newFilters","length","search","step","substring","part","includes","appearance","reset","EntitySearchModules","configs","Object","getOwnPropertyNames","getEntitySearchConfig","applyFilterChange","filter","type","f","fieldName","map","removeFilterChange","systemDbName","selectDBName","allEntitysFromType","setAllEntitys","setEntities","pageEntities","setPageEntities","activePage","setActivePage","pageAmount","setPageAmount","setStep","loading","isLoading","reciveAll","results","load","oldStep","oldPage","console","log","newEntitiesShown","slice","Math","ceil","loadPage","isNewSearch","reciveAllFiltered","newStep","newPage","newEntities","loadPageWithResultsOld","loadPageWithResults","changePage","page","EntityOptions","BreadCrumbIcon","ButtonGroup","size","o","style","marginRight","InputNumber","prefix","value","onChange","changeStep","max","min","scrollable","width","TagGroup","marginLeft","marginTop","index","Array","Tag","val","makeFilterTag","Loader","center","content","PaginationWrapper","Pagination","prev","next","first","last","ellipsis","boundaryLinks","pages","maxButtons","onChangePage","total","EntityContainer","EntityTile","getEntityTileConfig","TopBar","dispatch","useDispatch","liveGroup","group","peer","peerContext","conns","connections","entityObj","editEntity","showDeleteDialog","setDeleteDialog","tableName","editAndSaveEntity","msg","updateWithCallback","result","toaster","closable","header","updateEntity","name","remove","id","obj","newObj","createNewWithId","duplicateEntity","uuid","localStorage","getItem","ruuid","newEvent","payload","EventType","addEvent","postEvent","shareEntity","getEntityDetailConfig","isNew","onEdit","theme","textColor"],"sourceRoot":""}