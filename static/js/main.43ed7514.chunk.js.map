{"version":3,"sources":["components/generic/EntityTile.tsx","services/ColorService.tsx","services/IconService.tsx","components/theme/Theme.tsx","components/theme/MyThemeProvider.tsx","logo192.png","components/general/Card.tsx","components/pages/Menu.tsx","components/general/Header.tsx","components/general/AppWrapper.tsx","components/generic/EntityRoutes.tsx","database/Store.tsx","App.tsx","serviceWorker.js","index.js","database/SystemReducer.tsx","services/DiceService.tsx","components/general/DiceRoller.tsx","components/general/LinkCheck.tsx","components/generic/TextEntityTile.tsx","services/TextService.tsx","database/PnPTomeDB.tsx","services/DatabaseService.tsx","services/SystemService.tsx"],"names":["EntityTile","entityName","entity","system","useSelector","state","makeFoundFlag","useCallback","config","found","field","toLowerCase","includes","searchTerm","spliceFirstToUpper","makeProp","index","icon","Prop","findIcon","makeWideSetAttributesProp","console","log","WideSetProp","Tags","Array","isArray","map","vals","tagIndex","makeWideSetEntitiesProp","makeSmallSetProp","SmallSetProp","makeWideProp","WideProp","getPicture","picBase64","pic","undefined","Tile","to","id","Object","getOwnPropertyNames","getEntityTileConfig","keyName","fieldEntry","findEntityTileField","type","Flag","ColoredFlag","toColor","firstToUpper","RoundNumberFlag","ImageName","Image","name","Name","styled","Link","theme","textColor","secondColor","mainColor","div","props","stringToColour","highlight","secondTextColor","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","TagGroup","str","length","hash","i","charCodeAt","colour","toString","substr","size","Icon","IconSet","get","cloneElement","Map","darkTheme","lightTheme","ctx","createContext","c","useContext","Error","Provider","createCtx","CtxProvider","MyThemeProvider","children","useState","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","Card","onClick","CardWrapper","Panel","shaded","Cards","Menu","show","history","useHistory","entities","filter","isMainEntity","destination","push","Header","location","useLocation","showMenu","openMenu","HeaderBar","Drawer","open","onClose","placement","Title","Version","packageJson","version","Body","HeaderElm","Logo","src","LogoImg","Reducable","System","right","NavElm","active","pathname","reducable","img","span","AppWrapper","dispatch","useDispatch","setSystem","JSON","parse","Content","App","Group","lazy","Options","Systems","SystemDetails","ToEntity","EntityOverview","EntityBuilder","EntityRoutes","routes","exact","path","component","forEach","match","makeRoutes","store","configureStore","reducer","systemReducer","PnPTomeDB","catch","e","error","Store","CustomProvider","fallback","Loader","center","content","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","initialState","systemJson","createSlice","reducers","action","payload","selectDBName","actions","rollDie","max","Math","round","random","DiceRoller","dice","setField","results","setResults","roll","commands","krit","result","text","newCommands","split","command","test","trim","rolls","fullCommand","commandSplits","part","concat","multiplier","startsWith","parseInt","replaceAll","com","newRoll","slice","endsWith","rollCommand","resultText","r","DiceRollerConatiner","stopPropagation","InputGroup","width","Input","placeholder","onChange","val","Button","ResultContainer","RollResult","LinkCheck","formatIcon","TextEntityTile","sources","setEntity","systemDbName","findEntity","a","newEntity","recivePromiseByMultiAttribute","recivePromiseByAttribute","charAt","toUpperCase","formating","format","newNodeArray","matchedCoordinates","replaceNode","sort","b","start","makeRactNodes","tags","coord","removeProcessedTags","coo","shift","stop","tag","endtag","Elm","textPart","substring","nodeParts","classes","replace","subMatchedCoordinates","stopIndex","subs","subClone","subCoo","preText","checkedText","formatTable","formatLink","postText","className","replaceFound","firstNode","splice","closeFirstNode","closeTag","node","reactStringReplace","linkParts","nameSource","Whisper","preventOverflow","trigger","speaker","Popover","full","enterable","Tag","color","maxWidth","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","th","td","systems","encounters","books","randomTables","campaigns","quests","npcs","worlds","locations","events","groups","notes","stores","upgrade","tx","table","toCollection","modify","spell","description","Dexie","reciveAllFromTable","dbName","tableName","callback","db","orderBy","toArray","array","finally","close","deleteSystem","data","delete","toaster","header","closable","updateSystem","update","updateWithCallback","saveNewFromList","refinedEntities","filename","bulkPut","prom","remove","reciveAll","reciveCount","count","reciveSystem","reciveByAttribute","where","equalsIgnoreCase","reciveAllByAttribute","obj","first","recivePromise","reciveAllPromise","applyFilters","filters","fieldName","hasTag","fieldPart","arrayTest","filterPart","reciveAllFiltered","sortedFiled","reverse","sortBy","reciveAttributeSelection","attribute","uniqueKeys","createNewWithId","put","deleteAll","clear","deleteAllByAttr","attr","attrs","equals","deleteCount","deleteDatabase","findEntitySearchField","attrName","findIndex","searchConfig","getEntitySearchConfig","tileConfig","findEntityDetailField","detailConfig","getEntityDetailConfig","getEntityAttributes","attributes","formatSystemName","generateSystem","schema","entityIndex","fieldIndex","makeSchema"],"mappings":"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","file":"static/js/main.43ed7514.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Tag, TagGroup } from \"rsuite\";\nimport styled from \"styled-components\";\nimport ConfigPart from \"../../data/ConfigPart\";\nimport IEntity from \"../../data/IEntity\";\nimport { RootState } from \"../../database/Store\";\nimport { stringToColour } from \"../../services/ColorService\";\nimport { findIcon } from \"../../services/IconService\";\nimport { findEntityTileField, getEntityTileConfig } from \"../../services/SystemService\";\nimport { spliceFirstToUpper, firstToUpper } from \"../../services/TextService\";\n\ninterface $Props {\n  entityName: string;\n  entity: IEntity;\n}\n\nconst EntityTile = ({ entityName, entity }: $Props) => {\n  const system = useSelector((state: RootState) => state.system);\n\n  const makeFoundFlag = useCallback(\n    (config: ConfigPart) => {\n      if (config.found) {\n        const field = entity[config.found.field as keyof typeof entity];\n        const showFlag = (field + \"\")\n          .toLowerCase()\n          .includes(config.found.searchTerm);\n        return showFlag ? spliceFirstToUpper(config.found.searchTerm) : \"\";\n      }\n    },\n    [entity]\n  );\n\n  const makeProp = useCallback(\n    (config: ConfigPart, field: string | number, index: number) => {\n      const icon = config.icon;\n      if (icon) {\n        return (\n          <Prop key={index}>\n            {findIcon(icon)} {field}\n          </Prop>\n        );\n      } else {\n        return <Prop key={index}>{field}</Prop>;\n      }\n    },\n    []\n  );\n\n  const makeWideSetAttributesProp = useCallback(\n    (config: ConfigPart, field: string | number | string[], index: number) => {\n      console.log(config, field, index)\n      const icon = config.icon;\n      if (icon) {\n        return (\n          <WideSetProp key={index}>\n            {findIcon(icon)}\n            <Tags>\n              {Array.isArray(field) &&\n                field.map((vals: string, tagIndex: number) => (\n                  <Tag key={\"\" + index + tagIndex}>{vals}</Tag>\n                ))}\n            </Tags>\n          </WideSetProp>\n        );\n      } else {\n        return (\n          <WideSetProp key={index}>\n            <Tags>\n              {Array.isArray(field) &&\n                field.map((vals: string, tagIndex: number) => (\n                  <Tag key={\"\" + index + tagIndex}>{vals}</Tag>\n                ))}\n            </Tags>\n          </WideSetProp>\n        );\n      }\n    },\n    []\n  );\n\n  const makeWideSetEntitiesProp = useCallback(\n    (config: ConfigPart, field: string | number | string[], index: number) => {\n      const icon = config.icon;\n      console.log(field)\n      if (icon) {\n        return (\n          <WideSetProp key={index}>\n            {findIcon(icon)}\n            <Tags>\n              {Array.isArray(field) &&\n                field.map((vals: string, tagIndex: number) => (\n                  <Tag key={\"\" + index + tagIndex}>{vals}</Tag>\n                ))}\n            </Tags>\n          </WideSetProp>\n        );\n      } else {\n        return (\n          <WideSetProp key={index}>\n            <Tags>\n              {Array.isArray(field) &&\n                field.map((vals: string, tagIndex: number) => (\n                  <Tag key={\"\" + index + tagIndex}>{vals}</Tag>\n                ))}\n            </Tags>\n          </WideSetProp>\n        );\n      }\n    },\n    []\n  );\n\n  const makeSmallSetProp = useCallback(\n    (config: ConfigPart, field: string | number | string[], index: number) => {\n      const icon = config.icon;\n      if (icon) {\n        return (\n          <SmallSetProp key={index}>\n            {findIcon(icon)}\n            <Tags>\n              <Tag>{field}</Tag>\n            </Tags>\n          </SmallSetProp>\n        );\n      } else {\n        return (\n          <SmallSetProp key={index}>\n            <Tags>\n              <Tag>{field}</Tag>\n            </Tags>\n          </SmallSetProp>\n        );\n      }\n    },\n    []\n  );\n\n  const makeWideProp = useCallback(\n    (config: ConfigPart, field: string | number, index: number) => {\n      const icon = config.icon;\n      if (icon) {\n        return (\n          <WideProp key={index}>\n            {findIcon(icon)} {field}\n          </WideProp>\n        );\n      } else {\n        return <WideProp key={index}>{field}</WideProp>;\n      }\n    },\n    []\n  );\n\n  const getPicture = useCallback(() => {\n    const picBase64 = entity[\"picBase64\" as keyof typeof entity];\n    const pic = entity[\"pic\" as keyof typeof entity];\n    if (picBase64 !== \"\" && picBase64 !== null && picBase64 !== undefined) {\n      return picBase64 + \"\";\n    } else if (pic !== \"\" && pic !== null && pic !== undefined) {\n      return pic + \"\";\n    }\n    return \"\";\n  }, [entity]);\n\n  return (\n    <Tile to={`/${entityName}-detail/${entity.id}`}>\n      {Object.getOwnPropertyNames(getEntityTileConfig(system, entityName)).map(\n        (keyName: any, index: number) => {\n          const field = entity[keyName as keyof typeof entity];\n          const fieldEntry: ConfigPart = findEntityTileField(\n            system,\n            entityName,\n            keyName\n          );\n          if (field !== undefined) {\n            switch (true) {\n              case fieldEntry.type === \"Flag\":\n                return <Flag key={index}>{field}</Flag>;\n              case fieldEntry.type === \"ColoredFlag\":\n                return (\n                  <ColoredFlag key={index} toColor={field + \"\"}>\n                    {findIcon(fieldEntry.icon)} {firstToUpper(field + \"\")}\n                  </ColoredFlag>\n                );\n              case fieldEntry.type === \"RoundNumberFlag\":\n                return <RoundNumberFlag key={index}>{field}</RoundNumberFlag>;\n              case fieldEntry.type === \"BooleanFlag\":\n                return (\n                  <Flag key={index}>\n                    {!!field ? spliceFirstToUpper(keyName) : \"\"}\n                  </Flag>\n                );\n              case fieldEntry.type === \"ImageName\":\n                return (\n                  <>\n                    {getPicture() !== \"\" ? (\n                      <ImageName key={index}>\n                        <Image pic={getPicture()}></Image>\n                        <b>{entity.name}</b>\n                      </ImageName>\n                    ) : (\n                      <Name key={index}>\n                        <b>{entity.name}</b>\n                      </Name>\n                    )}\n                  </>\n                );\n              case fieldEntry.type === \"SmallProp\":\n                return <>{makeProp(fieldEntry, field, index)}</>;\n              case fieldEntry.type === \"WideSetEntitiesProp\":\n                return <>{makeWideSetEntitiesProp(fieldEntry, field, index)}</>;\n                case fieldEntry.type === \"WideSetAttributesProp\":\n                return <>{makeWideSetAttributesProp(fieldEntry, field, index)}</>;\n              case fieldEntry.type === \"SmallSetProp\":\n                return <>{makeSmallSetProp(fieldEntry, field, index)}</>;\n              case fieldEntry.type === \"WideProp\":\n                return <>{makeWideProp(fieldEntry, field, index)}</>;\n              default:\n                return <></>;\n            }\n          } else {\n            switch (true) {\n              case fieldEntry.type === \"FoundFlag\":\n                return <Flag key={index}>{makeFoundFlag(fieldEntry)}</Flag>;\n              default:\n                return <></>;\n            }\n          }\n        }\n      )}\n    </Tile>\n  );\n};\n\nexport default EntityTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 20em;\n  max-width: 300px;\n  color: ${({ theme }) => theme.textColor};\n  background-color: ${({ theme }) => theme.secondColor};\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.mainColor};\n  overflow: hidden;\n  cursor: pointer;\n\n  &:hover {\n    color: ${({ theme }) => theme.textColor};\n  }\n`;\n\ntype $ColoredFlag = {\n  toColor?: string;\n};\n\nconst ColoredFlag = styled.div<$ColoredFlag>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  color: ${(props) => {\n    return stringToColour(props.toColor);\n  }};\n`;\n\nconst RoundNumberFlag = styled.div`\n  float: right;\n\n  padding: 10px;\n  margin: 5px;\n  width: 40px;\n  height: 40px;\n\n  line-height: 20px;\n  text-align: center;\n\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.highlight};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.textColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.textColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst Prop = styled.div`\n  height: 30px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.secondTextColor};\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n  }\n\n  svg {\n    margin-right: 5px;\n    width: 12px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.highlight};\n  }\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n  display: flex;\n`;\n\nconst WideSetProp = styled(WideProp)`\n  height: auto;\n`;\n\nconst SmallSetProp = styled(WideProp)`\n  margin: 0 0 5px 0px;\n  height: auto;\n  display: flex;\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n\nconst Tags = styled(TagGroup)`\n  width: inherit;\n  white-space: normal;\n`;\n","export const stringToColour = (str: string | undefined) => {\n  if (str && str.length > 0) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = \"#\";\n    for (let i = 0; i < 3; i++) {\n      var value = (hash >> (i * 8)) & 0xff;\n      colour += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return colour;\n  }\n  return \"white\";\n};\n","import { cloneElement } from \"react\";\nimport {\n  FaHistory,\n  FaHourglassHalf,\n  FaMortarPestle,\n  FaUser,\n  FaLink,\n  FaCoins,\n  FaWeightHanging,\n  FaBookOpen,\n  FaMeteor,\n} from \"react-icons/fa\";\nimport {\n  GiBackpack,\n  GiBindle,\n  GiBloodySword,\n  GiBodySwapping,\n  GiBullseye,\n  GiCryoChamber,\n  GiCrystalWand,\n  GiDna2,\n  GiMagicAxe,\n  GiPlagueDoctorProfile,\n  GiSherlockHolmes,\n  GiSwordSpade,\n  GiSwordSpin,\n  GiUpgrade,\n  GiWomanElfFace,\n} from \"react-icons/gi\";\nimport { IoSchool } from \"react-icons/io5\";\n\nexport default class Icons {\n  directions = new Set<string>([\"east\", \"west\"]);\n}\n\nexport const findIcon = (name: string | undefined, size?: number) => {\n  if (name) {\n    const Icon = IconSet.get(name);\n    if (Icon && size) {\n      const ClonedElementWithMoreProps = cloneElement(Icon, { size: size });\n      return ClonedElementWithMoreProps;\n    }\n    return Icon;\n  }\n};\n\nexport const IconSet = new Map<string, JSX.Element>([\n  [\"FaHistory\", <FaHistory />],\n  [\"FaHourglassHalf\", <FaHourglassHalf />],\n  [\"FaMortarPestle\", <FaMortarPestle />],\n  [\"FaUser\", <FaUser />],\n  [\"FaLink\", <FaLink />],\n  [\"FaCoins\", <FaCoins />],\n  [\"FaWeightHanging\", <FaWeightHanging />],\n  [\"FaMeteor\", <FaMeteor />],\n  [\"FaBookOpen\", <FaBookOpen />],\n  [\"GiCrystalWand\", <GiCrystalWand />],\n  [\"GiBackpack\", <GiBackpack />],\n  [\"GiBullseye\", <GiBullseye />],\n  [\"GiSwordSpade\", <GiSwordSpade />],\n  [\"GiBloodySword\", <GiBloodySword />],\n  [\"GiSwordSpin\", <GiSwordSpin />],\n  [\"GiMagicAxe\", <GiMagicAxe />],\n  [\"GiSherlockHolmes\", <GiSherlockHolmes />],\n  [\"GiWomanElfFace\", <GiWomanElfFace />],\n  [\"GiBindle\", <GiBindle />],\n  [\"GiUpgrade\", <GiUpgrade />],\n  [\"GiPlagueDoctorProfile\", <GiPlagueDoctorProfile />],\n  [\"GiBodySwapping\", <GiBodySwapping />],\n  [\"GiCryoChamber\", <GiCryoChamber />],\n  [\"GiDna2\", <GiDna2 />],\n  [\"IoSchool\", <IoSchool />],\n]);\n","interface Theme {\n  mainColor: string;\n  secondColor: string;\n  textColor: string;\n  secondTextColor: string;\n  highlight: string;\n}\nexport default Theme;\n\nexport const darkTheme: Theme = {\n  mainColor: \"#191D38\",\n  secondColor: \"#272c4a\",\n  textColor: \"white\",\n  secondTextColor: \"lightslategray\",\n  highlight: \"#F55C5C\",\n};\nexport const lightTheme: Theme = {\n  mainColor: \"#191D38\",\n  secondColor: \"#272c4a\",\n  textColor: \"white\",\n  secondTextColor: \"lightslategray\",\n  highlight: \"#F55C5C\",\n};\n\n// interface Theme {\n//   buttons: {\n//     color: string;\n//     backgroundColor: string;\n//     disabled: string;\n//     hoverColor: string;\n//     height: string;\n//   };\n//   input: {\n//     color: string;\n//     backgroundColor: string;\n//   };\n//   main: {\n//     backgroundColor: string;\n//     color: string;\n//     highlight: string;\n//   };\n//   header: {\n//     backgroundColor: string;\n//     color: string;\n//     highlight: string;\n//   };\n//   tile: {\n//     backgroundColor: string;\n//     backgroundColorLink: string;\n//     color: string;\n//     headerColor: string;\n//     boxShadow: string;\n//   };\n//   nav: {\n//     size: {\n//       small: {\n//         width: string;\n//         height: string;\n//       };\n//       medium: {\n//         width: string;\n//         height: string;\n//       };\n//       large: {\n//         width: string;\n//         height: string;\n//       };\n//     };\n//   };\n// }\n\n// export const lightTheme: Theme = {\n//   buttons: {\n//     color: \"white\",\n//     backgroundColor: \"#F55C5C\",\n//     disabled: \"#E1D0E5\",\n//     hoverColor: \"darkgrey\",\n//     height: \"20px\",\n//   },\n//   input: {\n//     color: \"inherit\",\n//     backgroundColor: \"white\",\n//   },\n//   main: {\n//     backgroundColor: \"#F3F5F8\",\n//     color: \"\",\n//     highlight: \"#F55C5C\",\n//   },\n//   header: {\n//     color: \"white\",\n//     backgroundColor: \"#F55C5C\",\n//     highlight: \"#8000ff\",\n//   },\n//   tile: {\n//     backgroundColor: \"white\",\n//     backgroundColorLink: \"lightslategray\",\n//     color: \"darkgrey\",\n//     headerColor: \"black\",\n//     boxShadow: \"\",\n//   },\n//   nav: {\n//     size: {\n//       small: {\n//         width: \"15em\",\n//         height: \"15em\",\n//       },\n//       medium: {\n//         width: \"15em\",\n//         height: \"15em\",\n//       },\n//       large: {\n//         width: \"15em\",\n//         height: \"15em\",\n//       },\n//     },\n//   },\n// };\n\n// export const darkTheme: Theme = {\n//   buttons: {\n//     color: \"#fff\",\n//     backgroundColor: \"#F55C5C\",\n//     disabled: \"#E1D0E5\",\n//     hoverColor: \"#191D38\",\n//     height: \"20px\",\n//   },\n//   input: {\n//     color: \"lightgrey\",\n//     backgroundColor: \"#1A1F3B\",\n//   },\n//   main: {\n//     backgroundColor: \"#191D38\",\n//     color: \"\",\n//     highlight: \"#F55C5C\",\n//   },\n//   header: {\n//     color: \"white\",\n//     backgroundColor: \"#191D38\",\n//     highlight: \"#8000ff\",\n//   },\n//   tile: {\n//     backgroundColor: \"#272c4a\",\n//     backgroundColorLink: \"#E45D68\",\n//     headerColor: \"#CACBDB\",\n//     color: \"lightslategray\",\n//     boxShadow: \"\",\n//   },\n//   nav: {\n//     size: {\n//       ...lightTheme.nav.size,\n//     },\n//   },\n// };\n\n// export default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo192.21188df6.png\";","import { ReactNode } from \"react\";\nimport { Panel } from \"rsuite\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: ReactNode;\n  onClick?: () => void;\n}\nconst Card = ({ children, onClick }: $Props) => {\n  return (\n    <CardWrapper onClick={onClick}>\n      <Panel shaded>{children}</Panel>\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n\nconst CardWrapper = styled.div`\n  flex: 1 1;\n  align-self: stretch;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.mainColor};\n  border-radius: 5px;\n  max-width: max-content;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${({ theme }) => theme.highlight};\n  }\n`;\n\nexport const Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  align-items: stretch;\n`;\n\nexport const CardDivier = styled.div`\n  flex: 1 1 100%;\n  border-top: 1px solid var(--rs-border-primary);\n`;","import { useHistory } from \"react-router\";\nimport Card, { Cards } from \"../general/Card\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../database/Store\";\nimport { SystemEntity } from \"../../database/SystemReducer\";\nimport { findIcon } from \"../../services/IconService\";\nimport { firstToUpper } from \"../../services/TextService\";\n\ninterface $MenuProps {\n  show: (val: boolean) => void;\n}\n\nconst Menu = ({ show }: $MenuProps) => {\n  let history = useHistory();\n  const system = useSelector((state: RootState) => state.system);\n\n  const move = (destination: string) => {\n    history.push(destination);\n    show(false);\n  };\n\n  return (\n    <Cards>\n      {system.entities\n        .filter((entity: SystemEntity) => entity.isMainEntity)\n        .map((entity: SystemEntity, index: number) => {\n          return (\n            <Card\n              key={index}\n              onClick={() => move(`/${entity.entityName}-overview`)}\n            >\n              {findIcon(entity.icon)} {firstToUpper(entity.entityName)}\n            </Card>\n          );\n        })}\n    </Cards>\n  );\n};\n\nexport default Menu;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { CgMenuGridO } from \"react-icons/cg\";\nimport { FaUser, FaCogs } from \"react-icons/fa\";\nimport LogoImg from \"../../logo192.png\";\nimport { Drawer } from \"rsuite\";\nimport packageJson from \"../../../package.json\";\nimport Menu from \"../pages/Menu\";\nimport { GiBookshelf } from \"react-icons/gi\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../database/Store\";\n\nconst Header = () => {\n  let history = useHistory();\n  let location = useLocation();\n  const system = useSelector((state: RootState) => state.system);\n  const [showMenu, openMenu] = useState<boolean>(false);\n\n  return (\n    <HeaderBar>\n      <Drawer\n        size={\"xs\"}\n        open={showMenu}\n        onClose={() => openMenu(false)}\n        placement={\"right\"}\n      >\n        <Drawer.Header>\n          <Drawer.Title>Menu</Drawer.Title>\n          <Version>v{packageJson.version}</Version>\n        </Drawer.Header>\n        <Drawer.Body>\n          <Menu show={openMenu} />\n        </Drawer.Body>\n      </Drawer>\n\n      <HeaderElm>\n        <Logo src={LogoImg} />\n        <Reducable>\n          <System>{system.name}</System>Tome\n        </Reducable>\n      </HeaderElm>\n      <HeaderElm right>\n        <NavElm\n          active={location.pathname === \"/systems\" || location.pathname.includes(\"/system-detail\")}\n          onClick={() => history.push(\"/systems\")}\n        >\n          <GiBookshelf />\n        </NavElm>\n        <NavElm\n          active={\n            location.pathname !== \"/group\" &&\n            location.pathname !== \"/options\" &&\n            location.pathname !== \"/systems\" &&\n            !location.pathname.includes(\"/system-detail\")\n          }\n          onClick={() => openMenu(true)}\n        >\n          <CgMenuGridO />\n        </NavElm>\n        <NavElm\n          active={location.pathname === \"/group\"}\n          onClick={() => history.push(\"/group\")}\n        >\n          <FaUser />\n        </NavElm>\n        <NavElm\n          active={location.pathname === \"/options\"}\n          onClick={() => history.push(\"/options\")}\n        >\n          <FaCogs />\n        </NavElm>\n      </HeaderElm>\n    </HeaderBar>\n  );\n};\n\nexport default Header;\n\nconst HeaderBar = styled.div`\n  width: 100%;\n  height: 70px;\n  padding: 10px;\n  display: flex;\n  gap: 10px;\n  background-color: ${({ theme }) => theme.secondColor};\n  color: ${({ theme }) => theme.textColor};\n`;\n\nconst HeaderElm = styled.div<{ right?: boolean; reducable?: boolean }>`\n  flex: 1 1;\n  font-size: 30px;\n  line-height: 50px;\n\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  ${(props) =>\n    props.right\n      ? \"justify-content: flex-end;text-align: right;min-width: 230px;\"\n      : \"\"}\n\n  ${(props) =>\n    props.reducable\n      ? \"@media only screen and (max-width: 500px) {display: none;}\"\n      : \"\"}\n`;\n\nconst Logo = styled.img`\n  margin-top: 0px;\n  margin-right: 0px;\n  height: 50px;\n  border-radius: 50px;\n`;\n\nconst Version = styled.span`\n  line-height: 36px;\n`;\n\nconst NavElm = styled.div<{ active?: boolean }>`\n  flex: 1 1;\n  max-width: 70px;\n  height: 40px;\n  text-align: center;\n  cursor: pointer;\n\n  ${(props) => {\n    if (props.active) {\n      return `color: ${props.theme.highlight}`;\n    } else {\n      return `color: ${props.theme.textColor}`;\n    }\n  }}\n`;\n\nconst Reducable = styled.div`\n  @media only screen and (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst System = styled.span`\n  color: ${({ theme }) => theme.highlight};\n`;\n","import { ReactNode, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { setSystem } from \"../../database/SystemReducer\";\nimport Header from \"./Header\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const system = localStorage.getItem('system');\n    if (system) {\n      dispatch(setSystem(JSON.parse(system)));\n    }\n  }, [])\n\n  return (\n    <App>\n      <Header />\n      <Content>{children}</Content>\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  background-color: ${({ theme }) => theme.mainColor};\n`;\n\nconst Content = styled.div`\n  width: calc(100% - 20px);\n  padding: 10px;\n`;\n","import { lazy } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, RouteComponentProps, Switch } from \"react-router\";\nimport { RootState } from \"../../database/Store\";\nimport { SystemEntity } from \"../../database/SystemReducer\";\n\nconst Group = lazy(() => import(\"../pages/Group\"));\nconst Options = lazy(() => import(\"../pages/Options\"));\nconst Systems = lazy(() => import(\"../pages/Systems\"));\nconst SystemDetails = lazy(() => import(\"./details/SystemDetails\"));\n\nconst ToEntity = lazy(() => import(\"./details/ToEntity\"));\nconst EntityOverview = lazy(() => import(\"./EntityOverview\"));\nconst EntityBuilder = lazy(() => import(\"./details/EntityBuilder\"));\n\nexport type TParams = { name?: string };\n\nconst EntityRoutes = () => {\n  const system = useSelector((state: RootState) => state.system);\n\n  const makeRoutes = () => {\n    let routes: JSX.Element[] = [];\n    if (system) {\n      routes.push(<Route key={\"empty\"} exact path=\"/\" component={Systems} />);\n      routes.push(\n        <Route key={\"group\"} exact path=\"/group\" component={Group} />\n      );\n      routes.push(\n        <Route key={\"options\"} exact path=\"/options\" component={Options} />\n      );\n      routes.push(\n        <Route key={\"systems\"} exact path=\"/systems\" component={Systems} />\n      );\n      routes.push(\n        <Route\n          key={\"systemsdetail\"}\n          exact\n          path=\"/system-detail/:id\"\n          component={SystemDetails}\n        />\n      );\n      system.entities.forEach((entity: SystemEntity, index: number) => {\n        routes.push(\n          <Route\n            key={index + \"detailname\"}\n            path={`/${entity.entityName}-detail/:name`}\n            component={(match: RouteComponentProps<TParams>) => (\n              <ToEntity entityName={entity.entityName} match={match} />\n            )}\n          />\n        );\n        routes.push(\n          <Route\n            key={index + \"detailid\"}\n            path={`/${entity.entityName}-detail/:id`}\n            component={(match: RouteComponentProps<TParams>) => (\n              <ToEntity entityName={entity.entityName} match={match} />\n            )}\n          />\n        );\n        routes.push(\n          <Route\n            key={index + \"detailbuilder\"}\n            path={`/${entity.entityName}-builder`}\n            component={() => <EntityBuilder entityName={entity.entityName} />}\n          />\n        );\n        routes.push(\n          <Route\n            key={index + \"detailoverview\"}\n            path={`/${entity.entityName}-overview`}\n            component={() => <EntityOverview entityName={entity.entityName} />}\n          />\n        );\n      });\n    }\n    return routes;\n  };\n\n  return <Switch>{makeRoutes()}</Switch>;\n};\n\nexport default EntityRoutes;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport systemReducer from \"./SystemReducer\";\nimport { useDispatch } from \"react-redux\";\n\nconst store = configureStore({\n  reducer: {\n    system: systemReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>(); // Export a hook that can be reused to resolve types\n\nexport default store;\n","import { Suspense, useEffect } from \"react\";\nimport { MyThemeProvider as ThemeProvider } from \"./components/theme/MyThemeProvider\";\nimport { HashRouter } from \"react-router-dom\";\nimport { CustomProvider, Loader } from \"rsuite\";\nimport AppWrapper from \"./components/general/AppWrapper\";\nimport EntityRoutes from \"./components/generic/EntityRoutes\";\n\nimport { Provider } from \"react-redux\";\nimport Store from \"./database/Store\";\nimport { PnPTomeDB } from \"./database/PnPTomeDB\";\n\nconst App = () => {\n  const db = new PnPTomeDB();\n  db.open().catch(function (e) {\n    console.error(\"Open failed: \" + e);\n  });\n  return (\n    <Provider store={Store}>\n      <CustomProvider theme=\"dark\">\n        <ThemeProvider>\n          <HashRouter>\n            <AppWrapper>\n              <Suspense fallback={<Loader center content=\"Loading...\" />}>\n                <EntityRoutes />\n              </Suspense>\n            </AppWrapper>\n          </HashRouter>\n        </ThemeProvider>\n      </CustomProvider>\n    </Provider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"react-quill/dist/quill.snow.css\";\n// import \"rsuite/dist/rsuite.min.css\";\nimport \"./custome.less\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport systemJson from \"../System.json\";\nimport { RootState } from \"./Store\";\n\nexport interface SystemEntity {\n  entityName: string;\n  icon: string;\n  isMainEntity: boolean;\n  attributes: string[];\n  searchConfig: any;\n  tileConfig: any;\n  detailConfig: any;\n}\n\nexport interface System {\n  id: number;\n  version: string;\n  name: string;\n  pic: string;\n  entities: SystemEntity[];\n}\n\nconst initialState: System = systemJson as System;\n\nexport const systemReducer = createSlice({\n  name: \"system\",\n  initialState: initialState,\n  reducers: {\n    setSystem: (state, action: PayloadAction<System>) => action.payload,\n  },\n});\n\nexport const selectDBName = (state: RootState) =>\n  `${state.system.name.toLowerCase()}-${state.system.version}`;\n\nexport const { setSystem } = systemReducer.actions;\n\nexport default systemReducer.reducer;\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand\n      .split(\"+\")\n      .map((part, i: number) => {\n        if (i > 0) return \"+\" + part;\n        return part;\n      })\n      .forEach((part) => {\n        let split = part.split(\"-\").map((part, i: number) => {\n          if (i > 0) return \"-\" + part;\n          return part;\n        });\n        commandSplits = commandSplits.concat(split);\n      });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        rolls = rolls.slice(0, -1);\n        result += parseInt(command);\n        rolls += \"|\" + command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1);\n    if (!rolls.endsWith(\")\")) rolls += \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import { useState } from \"react\";\nimport { FaDice } from \"react-icons/fa\";\nimport { InputGroup, Input } from \"rsuite\";\nimport styled from \"styled-components\";\nimport { rollCommand } from \"../../services/DiceService\";\n\ninterface $Props {\n  dice: string;\n}\n\nconst DiceRoller = ({ dice }: $Props) => {\n  const [field, setField] = useState<string>(dice);\n  const [results, setResults] = useState<string[]>([]);\n\n  const roll = () => {\n    if (field !== \"\") {\n      const { text, result, rolls } = rollCommand(field);\n      const resultText = field + \": \" + result + rolls.replaceAll(\"`\", \"\") + \" \" + text;\n      setResults((r) => [resultText, ...r]);\n    }\n  };\n\n  const whenClick = (e: any) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <DiceRollerConatiner onClick={whenClick}>\n      <InputGroup style={{ width: \"max-content\" }}>\n        <Input placeholder={\"e.g. 2d8+3\"} value={field} onChange={(val: any) => setField(val)} />\n        <InputGroup.Button onClick={(e) => roll()}>\n          <FaDice />\n        </InputGroup.Button>\n      </InputGroup>\n      <ResultContainer>\n        {results.length > 0 &&\n          results.map((result: string, index: number) => {\n            return <RollResult key={index}>{index === 0 ? <b>{result}</b> : result}</RollResult>;\n          })}\n      </ResultContainer>\n    </DiceRollerConatiner>\n  );\n};\n\nexport default DiceRoller;\n\nconst DiceRollerConatiner = styled.div`\n  padding: 10px;\n  color: ${({ theme }) => theme.secondTextColor};\n  background-color: ${({ theme }) => theme.mainColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst ResultContainer = styled.div`\n  flex: 1 1 100%;\n  max-height: 200px;\n  overflow-y: scroll;\n  margin: 5px;\n`;\n\nconst RollResult = styled.div`\n  flex: 1 1 100%;\n  padding: 5px;\n  background-color: ${({ theme }) => theme.secondColor};\n  margin-bottom: 3px;\n`;\n","import { BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n  GiBindle,\n  GiSherlockHolmes,\n  GiStabbedNote,\n} from \"react-icons/gi\";\nimport { FaMeteor, FaIdCard, FaDragon, FaMapMarkedAlt, FaTable } from \"react-icons/fa\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\n\ninterface $Props {\n  type: string;\n}\n\nconst LinkCheck = ({ type }: $Props) => {\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FaMeteor />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n      case \"classe\":\n      case \"subclasse\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FaIdCard />;\n      case \"monster\":\n        return <FaDragon />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiStabbedNote />;\n      case \"note\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FaMapMarkedAlt />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FaTable />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"feat\":\n        return <GiBindle />;\n      case \"background\":\n        return <GiSherlockHolmes />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return <></>;\n    }\n  };\n\n  return formatIcon(type);\n};\n\nexport default LinkCheck;\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectDBName } from \"../../database/SystemReducer\";\nimport {\n  recivePromiseByAttribute,\n  recivePromiseByMultiAttribute,\n} from \"../../services/DatabaseService\";\nimport { findIcon } from \"../../services/IconService\";\nimport EntityTile from \"./EntityTile\";\n\ninterface $Props {\n  entityName: string;\n  name: string;\n  sources: string;\n}\n\nconst TextEntityTile = ({ entityName, name, sources }: $Props) => {\n  const [entity, setEntity] = useState<any>();\n  const systemDbName = useSelector(selectDBName);\n\n  const findEntity = async () => {\n    let newEntity: any = undefined;\n    if (sources !== undefined) {\n      newEntity = await recivePromiseByMultiAttribute(\n        systemDbName,\n        entityName,\n        {\n          name: name,\n          sources: sources,\n        }\n      );\n    } else {\n      newEntity = await recivePromiseByAttribute(\n        systemDbName,\n        entityName,\n        \"name\",\n        name\n      );\n    }\n    setEntity(newEntity);\n  };\n\n  useEffect(() => {\n    findEntity();\n  }, []);\n\n  if (entity !== undefined)\n    return <EntityTile entityName={entityName} entity={entity} />;\n  return <></>;\n};\n\nexport default TextEntityTile;\n","import { ReactNodeArray } from \"react\";\nimport reactStringReplace from \"react-string-replace\";\nimport { Tag, Popover, Whisper } from \"rsuite\";\nimport styled from \"styled-components\";\nimport DiceRoller from \"../components/general/DiceRoller\";\nimport LinkCheck from \"../components/general/LinkCheck\";\nimport TextEntityTile from \"../components/generic/TextEntityTile\";\n\nexport const firstToUpper = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\nexport const spliceFirstToUpper = (str: string) => {\n  return str.charAt(0).toUpperCase();\n};\n\nexport const formating = (text: string) => {\n  let checkedText = format(text);\n  return checkedText;\n};\n\nconst format = (text: string): JSX.Element[] => {\n  let newNodeArray: JSX.Element[] = [];\n  let matchedCoordinates: {\n    tag: string;\n    endtag: string;\n    start: number;\n    stop: number;\n  }[] = [];\n  let found: string[] | null = text.match(/(<[^>]*>)/gm);\n  if (found !== null) {\n    matchedCoordinates = replaceNode(text, found).sort(\n      (a, b) => a.start - b.start\n    );\n    while (matchedCoordinates.length > 0) {\n      newNodeArray = [\n        ...newNodeArray,\n        makeRactNodes(text, matchedCoordinates, (tags) => {\n          matchedCoordinates = [...matchedCoordinates].filter((coord) => {\n            return !tags.includes(coord);\n          });\n        }),\n      ];\n    }\n  }\n  return newNodeArray;\n};\n\nconst makeRactNodes = (\n  text: String,\n  matchedCoordinates: {\n    tag: string;\n    endtag: string;\n    start: number;\n    stop: number;\n  }[],\n  removeProcessedTags: (\n    tags: { tag: string; endtag: string; start: number; stop: number }[]\n  ) => void\n) => {\n  let coo:\n    | { tag: string; endtag: string; start: number; stop: number }\n    | undefined = matchedCoordinates.shift();\n  if (coo !== undefined) {\n    const [start, stop] = [coo.start, coo.stop];\n    const tag = coo.tag;\n    const endtag = coo.endtag;\n\n    if (tag === \"<br>\") {\n      let Elm: any = tag\n        .replaceAll(\"<\", \"\")\n        .replaceAll(\"/\", \"\")\n        .replaceAll(\">\", \"\");\n      return <Elm key={start}></Elm>;\n    } else {\n      let textPart = text.substring(start + tag.length, stop - endtag.length);\n\n      let nodeParts = tag.split(\" \");\n      let classes: string = \"\";\n      if (nodeParts.length > 1) {\n        if (nodeParts[1].startsWith(\"class=\")) {\n          classes = nodeParts[1]\n            .split(\"=\")[1]\n            .replaceAll('\"', \"\")\n            .replace(\">\", \"\");\n        }\n      }\n      let Elm: any = nodeParts[0]\n        .replaceAll(\"<\", \"\")\n        .replaceAll(\"/\", \"\")\n        .replaceAll(\">\", \"\");\n\n      let subMatchedCoordinates = [...matchedCoordinates].filter((coord) => {\n        return start < coord.start && stop > coord.stop;\n      });\n      removeProcessedTags(subMatchedCoordinates);\n\n      if (subMatchedCoordinates.length > 0) {\n        let stopIndex = 0;\n        let subs: any[] = [];\n        let subClone = [...subMatchedCoordinates];\n        subMatchedCoordinates.forEach((subCoo, i) => {\n          let preText = textPart.substring(\n            stopIndex,\n            subCoo.start - start - tag.length\n          );\n          let checkedText = formatTable(preText);\n          checkedText = formatLink(checkedText);\n\n          stopIndex = subCoo.stop - start - tag.length;\n          subs = [\n            ...subs,\n            checkedText,\n            makeRactNodes(text, subClone, removeProcessedTags),\n          ];\n        });\n        let postText = textPart.substring(stopIndex, textPart.length);\n        let checkedText = formatTable(postText);\n        checkedText = formatLink(checkedText);\n        subs = [...subs, checkedText];\n        return (\n          <Elm key={start} className={classes}>\n            {subs}\n          </Elm>\n        );\n      } else {\n        let checkedText = formatTable(textPart);\n        checkedText = formatLink(checkedText);\n        return (\n          <Elm key={start} className={classes}>\n            {checkedText}\n          </Elm>\n        );\n      }\n    }\n  }\n  return <></>;\n};\n\nconst replaceNode = (text: string, found: string[]) => {\n  let replaceFound = [...found];\n  let matchedCoordinates: {\n    tag: string;\n    endtag: string;\n    start: number;\n    stop: number;\n  }[] = [];\n  let i: number = 0;\n\n  while (replaceFound.length > 0) {\n    let firstNode = replaceFound[i];\n    if (firstNode === \"<br>\") {\n      let start = 0;\n      matchedCoordinates.forEach((coo) => {\n        if (coo.tag === firstNode) {\n          if (coo.start >= start) start = coo.start + 1;\n        }\n      });\n      matchedCoordinates.push({\n        tag: firstNode,\n        endtag: firstNode,\n        start: text.indexOf(firstNode, start),\n        stop: text.indexOf(firstNode, start) + firstNode.length,\n      });\n      replaceFound.splice(i, 1);\n      i = 0;\n    } else {\n      let closeFirstNode = closeTag(firstNode);\n      if (replaceFound[i + 1] === closeFirstNode) {\n        let [start, stop] = [0, 0];\n        matchedCoordinates.forEach((coo) => {\n          if (coo.tag === firstNode) {\n            if (coo.start >= start) start = coo.start + 1;\n            if (coo.stop > stop) stop = coo.stop + 1;\n          }\n        });\n        matchedCoordinates.push({\n          tag: firstNode,\n          endtag: closeFirstNode,\n          start: text.indexOf(firstNode, start),\n          stop: text.indexOf(closeFirstNode, stop) + closeFirstNode.length,\n        });\n        replaceFound.splice(i, 2);\n        i = 0;\n      } else i++;\n    }\n  }\n  return matchedCoordinates;\n};\n\nconst closeTag = (node: string) => {\n  let nodeParts = node.split(\" \");\n  if (nodeParts.length > 1) return nodeParts[0].replace(\"<\", \"</\") + \">\";\n  return nodeParts[0].replace(\"<\", \"</\");\n};\n\nconst formatLink = (text: string | ReactNodeArray): ReactNodeArray => {\n  return reactStringReplace(text, /\\[\\[(\\w*\\.[\\s\\S]*?)\\]\\]/gm, (match, i) => {\n    const linkParts: string[] = match.split(\".\");\n    let entityName = linkParts[0];\n    let nameSource = linkParts[1];\n    let [name, sources] = nameSource.split(\"|\");\n    if (entityName === \"dice\") {\n      return (\n        <Whisper\n          key={match + i}\n          preventOverflow\n          trigger={[\"hover\", \"click\"]}\n          speaker={\n            <Popover full style={{ width: 200 }}>\n              <DiceRoller dice={nameSource} />\n            </Popover>\n          }\n          placement=\"auto\"\n          enterable\n        >\n          <Tag size={\"sm\"} color=\"red\">\n            <LinkCheck type={entityName} /> {nameSource}\n          </Tag>\n        </Whisper>\n      );\n    }\n    return (\n      <Whisper\n        key={match + i}\n        preventOverflow\n        trigger={[\"hover\", \"click\"]}\n        speaker={\n          <Popover full style={{ maxWidth: 300 }}>\n            <TextEntityTile\n              entityName={entityName}\n              name={name}\n              sources={sources}\n            />\n          </Popover>\n        }\n        placement=\"auto\"\n        enterable\n      >\n        <Tag size={\"sm\"} color=\"red\">\n          <LinkCheck type={entityName} /> {name}\n          {sources !== undefined ? ` (${sources})` : \"\"}\n        </Tag>\n      </Whisper>\n    );\n  });\n};\n\nconst formatTable = (text: string | ReactNodeArray): ReactNodeArray => {\n  return reactStringReplace(\n    text,\n    /\\|\\|tableStart\\|\\|([\\s\\S]*?)\\|\\|tableEnd\\|\\|/gm,\n    (match, i) => {\n      const tableRows: string[] = match.split(\"||\");\n      let isHead = true;\n      return (\n        <table key={match + i}>\n          <tbody key={match + i}>\n            {tableRows.map((row: string, index: number) => {\n              if (row.includes(\"|\")) {\n                if (isHead) {\n                  isHead = false;\n                  const cells = row.split(\"|\");\n                  return (\n                    <tr key={match + i + index}>\n                      {cells.map((cell: string, index: number) => {\n                        return (\n                          <TableHeadProp key={index}>{cell}</TableHeadProp>\n                        );\n                      })}\n                    </tr>\n                  );\n                } else {\n                  const cells = row.split(\"|\");\n                  return (\n                    <tr key={match + i + index}>\n                      {cells.map((cell: string, index: number) => {\n                        return (\n                          <TableProp key={index}>{formatLink(cell)}</TableProp>\n                        );\n                      })}\n                    </tr>\n                  );\n                }\n              } else {\n                return <></>;\n              }\n            })}\n          </tbody>\n        </table>\n      );\n    }\n  );\n};\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.mainColor};\n  color: ${({ theme }) => theme.textColor};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.mainColor};\n  color: ${({ theme }) => theme.textColor};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Group from \"../data/campaign/Group\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Note from \"../data/Note\";\nimport RandomTable from \"../data/RandomTable\";\nimport Event from \"../data/world/Event\";\nimport Location from \"../data/world/Location\";\nimport World from \"../data/world/World\";\nimport { System } from \"./SystemReducer\";\n\nexport class PnPTomeDB extends Dexie {\n  systems: Dexie.Table<System, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n  notes: Dexie.Table<Note, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"PnPTomeDB\");\n    this.version(1)\n      .stores({\n        systems: \"++id, name, version, pic, entities\",\n        encounters:\n          \"++id, [name+sources], name, enemies, players, isPlaying, currentInit, roundCounter, map, mapBase64, dimension\",\n        books: \"++id, [name+sources], name, cover, data, pages, tags\",\n        randomTables: \"++id, [name+sources], name, rows, header, filename\",\n        campaigns:\n          \"++id, [name+sources], name, pic, picBase64, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n        quests:\n          \"++id, [name+sources], name, pic, picBase64, description, rewards, followQuest, sources, filename\",\n        npcs: \"++id, [name+sources], name, pic, picBase64, char, monster, traits, description, sources, filename\",\n        worlds:\n          \"++id, [name+sources], name, map, description, locations, events, sources, filename\",\n        locations:\n          \"++id, [name+sources], name, map, mapBase64, dimension, markers, sources, filename\",\n        events:\n          \"++id, [name+sources], name, description, date, sources, filename\",\n        groups:\n          \"++id, [name+sources], name, pic, picBase64, description, notes, npcs, players, monsters, flow, sources, filename\",\n        notes: \"++id, [name+sources], name, text, sources, filename\",\n      })\n      .upgrade((tx) => {\n        return tx\n          .table(\"spells\")\n          .toCollection()\n          .modify((spell) => {\n            spell.description = spell.text;\n            delete spell.text;\n            spell.classes = spell.classes.replaceAll(\" \", \"\").split(\",\");\n          });\n      });\n\n    this.systems = this.table(\"systems\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n    this.notes = this.table(\"notes\");\n  }\n}\n","import { PnPTomeDB } from \"../database/PnPTomeDB\";\nimport Dexie, { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\nimport { Notification, Tag, toaster } from \"rsuite\";\nimport { System } from \"../database/SystemReducer\";\n\nexport const reciveAllFromDB = (\n  dbName: string,\n  callback: (data: { name: string; fields: any[] }[]) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      let names: { name: string; fields: any[] }[] = [];\n      db.tables.forEach(function (table) {\n        names.push({ name: table.name, fields: table.schema.indexes });\n      });\n      callback(names);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveFromDBAllFromTable = (\n  dbName: string,\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(\"name\")\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFromTable = (\n  dbName: string,\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(\"name\")\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttributes = (\n  dbName: string,\n  tableName: string,\n  name: string,\n  value: number | string,\n  callback: (data: IndexableType) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equals(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteSystem = (data: System) => {\n  console.log(data);\n  const db = new PnPTomeDB();\n  db.open()\n    .then(function () {\n      db.table(\"systems\")\n        .delete(data.id)\n        .then(() => {\n          toaster.push(\n            <Notification header={\"Success\"} closable type=\"success\">\n              Deletion successfull!\n            </Notification>,\n            { placement: \"bottomStart\" }\n          );\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateSystem = (data: System) => {\n  console.log(data);\n  const db = new PnPTomeDB();\n  db.open()\n    .then(function () {\n      db.table(\"systems\")\n        .update(data.id, data)\n        .then(() => {\n          toaster.push(\n            <Notification header={\"Success\"} closable type=\"success\">\n              Overwrite successfull!\n            </Notification>,\n            { placement: \"bottomStart\" }\n          );\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const update = (dbName: string, tableName: string, data: IEntity) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  dbName: string,\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (dbName: string, tableName: string, data: IEntity) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  dbName: string,\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db\n        .table(tableName)\n        .put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  dbName: string,\n  tableName: string,\n  entities: IEntity[]\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: entity.sources };\n      });\n      try {\n        const prom = await db.table(tableName).bulkPut(refinedEntities);\n        return prom;\n      } catch (error) {\n        console.log(error);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const resaveFromList = (\n  dbName: string,\n  tableName: string,\n  entities: IEntity[]\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return entity;\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  dbName: string,\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result) => {\n          callback(result as number);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (\n  dbName: string,\n  tableName: string,\n  id: number | undefined\n) => {\n  const db = new Dexie(dbName);\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  dbName: string,\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(\"name\")\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  dbName: string,\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (dbName: string, tableName: string) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveSystem = (\n  dbName: string,\n  value: number,\n  callback: (data: System) => void\n) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(function () {\n      db.table(\"systems\")\n        .get(value)\n        .then((val) => {\n          callback(val);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  dbName: string,\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllByAttribute = (\n  dbName: string,\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity[]) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  dbName: string,\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByMultiAttribute = (\n  dbName: string,\n  tableName: string,\n  obj: {\n    name: string;\n    sources: string;\n  }\n) => {\n  const db = new Dexie(dbName);\n  if (obj.sources !== undefined) {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(obj).first();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    // delete obj.sources;\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(obj).first();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromiseByAttribute = (\n  dbName: string,\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (\n  dbName: string,\n  tableName: string,\n  value: number\n) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  dbName: string,\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new Dexie(dbName);\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (dbName: string, tableName: string) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).orderBy(\"name\").toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        if (obj[filter.fieldName] !== undefined)\n          test.push(\n            // @ts-ignore\n            obj[filter.fieldName]\n              .toLowerCase()\n              .includes(filter.value.toLowerCase())\n          );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      const objValue: number | boolean = obj[filter.fieldName];\n      if (typeof objValue === \"number\")\n        test.push(obj[filter.fieldName] === +filter.value);\n      else test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (obj[filter.fieldName] instanceof Array) {\n            obj[filter.fieldName].forEach((val: string) => {\n              if (val.toLowerCase() === filterPart.toLowerCase()) {\n                arrayTest = true;\n              }\n            });\n          } else if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase() === filterPart.toLowerCase()\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  dbName: string,\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (\n  dbName: string,\n  tableName: string,\n  filters: Filter[]\n) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .catch((reason) => {\n      console.log(reason);\n      return undefined;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  dbName: string,\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (\n  dbName: string,\n  tableName: string,\n  attribute: string\n) => {\n  const db = new Dexie(dbName);\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  dbName: string,\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id) => {\n          callback(id as number);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (dbName: string, tableName: string) => {\n  console.log(dbName, tableName);\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .clear()\n        .then(() => {\n          toaster.push(\n            <Notification header={\"Success\"} closable type=\"success\">\n              Deleted all {tableName}.\n            </Notification>,\n            { placement: \"bottomStart\" }\n          );\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAllByAttrs = (\n  dbName: string,\n  tableName: string,\n  attr: string,\n  attrs: string[]\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName).where(attr).anyOf(attrs).delete();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAllByAttr = (\n  dbName: string,\n  tableName: string,\n  attr: string,\n  attrs: string\n) => {\n  const db = new Dexie(dbName);\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(attr)\n        .equals(attrs)\n        .delete()\n        .then((deleteCount) => {\n          if (deleteCount > 0)\n            toaster.push(\n              <Notification header={\"Success\"} closable type=\"success\">\n                Deleted all <Tag size=\"lg\">{deleteCount}</Tag> {tableName} where{\" \"}\n                {attr} was equal to {attrs}.\n              </Notification>,\n              { placement: \"bottomStart\" }\n            );\n          else\n            toaster.push(\n              <Notification header={\"Warning\"} closable type=\"warning\">\n                Found <Tag size=\"lg\">{deleteCount}</Tag> {tableName} where{\" \"}\n                {attr} was equal to {attrs}.\n              </Notification>,\n              { placement: \"bottomStart\" }\n            );\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (\n  dbName: string,\n  tableName: string,\n  filters: Filter[],\n  filename: string\n) => {\n  reciveAllFiltered(dbName, tableName, filters, (all: IndexableType[]) => {\n    const data = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(data));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  });\n};\n\nexport const deleteDatabase = (dbName: string) => {\n  const db = new Dexie(dbName);\n  db.delete();\n};\n","import Dexie from \"dexie\";\nimport ConfigPart from \"../data/ConfigPart\";\nimport { System, SystemEntity } from \"../database/SystemReducer\";\n\nexport const findEntitySearchField = (\n  system: System,\n  entityName: string,\n  attrName: string\n): ConfigPart => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return Object(system.entities[index].searchConfig)[attrName];\n};\n\nexport const getEntitySearchConfig = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].searchConfig;\n};\n\nexport const findEntityTileField = (\n  system: System,\n  entityName: string,\n  attrName: string\n): ConfigPart => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return Object(system.entities[index].tileConfig)[attrName];\n};\n\nexport const getEntityTileConfig = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].tileConfig;\n};\n\nexport const findEntityDetailField = (\n  system: System,\n  entityName: string,\n  attrName: string\n): ConfigPart => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return Object(system.entities[index].detailConfig)[attrName];\n};\n\nexport const getEntityDetailConfig = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].detailConfig;\n};\n\nexport const getEntityAttributes = (system: System, entityName: string) => {\n  const index = system.entities.findIndex(\n    (entity) => entity.entityName === entityName\n  );\n  return system.entities[index].attributes;\n}\n\nconst formatSystemName = (name: string) => {\n  return name.replaceAll(\" \", \"\").toLowerCase().trim();\n};\n\nconst makeSchema = (system: System) => {\n  let schema: string = \"\";\n  system.entities.forEach((entity: SystemEntity, entityIndex: number) => {\n    schema += `\"${entity.entityName.toLowerCase()}\": \"`;\n    entity.attributes.forEach((attr: string, fieldIndex: number) => {\n      if (attr.toLowerCase() === \"id\") schema += \"++id\";\n      else schema += `${attr.toLowerCase()}`;\n      if (entity.attributes.length - 1 !== fieldIndex) schema += \",\";\n    });\n    schema += `\"`;\n    if (system.entities.length - 1 !== entityIndex) schema += \",\";\n  });\n  return JSON.parse(`{${schema}}`);\n};\n\nexport const generateSystem = (system: System) => {\n  Dexie.delete(`${formatSystemName(system.name)}-${system.version}`);\n  const db = new Dexie(`${formatSystemName(system.name)}-${system.version}`);\n  const schema = makeSchema(system);\n  console.log(`${formatSystemName(system.name)}-${system.version} generated.`);\n  db.version(1).stores(schema);\n  db.open();\n};\n"],"sourceRoot":""}